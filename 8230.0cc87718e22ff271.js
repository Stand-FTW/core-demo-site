"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[8230],{48230:(q,R,i)=>{i.r(R),i.d(R,{AdministracaoOperacaoPageModule:()=>ve});var t=i(70655),a=i(98274),P=i(36895),l=i(24006),f=i(48058),S=i(92216),v=i(39528);let x=class{constructor(){this.currentTab="servicos",this.enableItem=!1}ngOnInit(){}changeTab(e){this.currentTab=e.detail.value}};x.ctorParameters=()=>[],x=(0,t.gn)([(0,a.wA2)({selector:"app-administracao-operacao",template:'<ion-header [translucent]="true">\n  <ion-toolbar>\n    <ion-buttons slot="start">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>ADM. Opera\xe7\xe3o</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content appScrollTheme>\n  <br />\n  <ion-segment class="background-segment" [(ngModel)]="currentTab" [ngModelOptions]="{standalone: true}"\n    (ionChange)="changeTab($event)">\n    <ion-segment-button style="margin-left: 5px; max-width: 200px" layout="icon-start" value="servicos">\n      <ion-icon style="font-size: 1.2em" name="construct-outline"></ion-icon>\n      <ion-label text-wrap class="wrap-text" style="font-size: 1.1em">\n        Servi\xe7os\n      </ion-label>\n    </ion-segment-button>\n    <ion-segment-button style="margin-left: 5px; max-width: 200px" layout="icon-start" value="produtos">\n      <ion-icon style="font-size: 1.2em" name="fast-food-outline"></ion-icon>\n      <ion-label text-wrap class="wrap-text" style="font-size: 1.1em">\n        Produtos\n      </ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  <ion-segment class="background-segment" [(ngModel)]="currentTab" [ngModelOptions]="{standalone: true}"\n    (ionChange)="changeTab($event)">\n    <ion-segment-button style="margin-left: 5px; max-width: 200px" layout="icon-start" value="planos">\n      <fa-icon style="font-size: 1.2em;" [icon]="[\'fas\', \'file-signature\']"></fa-icon>\n      <ion-label text-wrap class="wrap-text" style="font-size: 1.1em">\n        Planos\n      </ion-label>\n    </ion-segment-button>\n    <ion-segment-button style="margin-left: 5px; max-width: 200px" layout="icon-start" value="itens-planos">\n      <fa-icon style="font-size: 1.2em;" [icon]="[\'fas\', \'bag-shopping\']"></fa-icon>\n      <ion-label text-wrap class="wrap-text" style="font-size: 1.1em">\n        Itens de Planos\n      </ion-label>\n    </ion-segment-button>\n  </ion-segment>\n  <br />\n\n  <div class="wall-background h-screen">\n    <ng-container *ngIf="currentTab === \'servicos\'">\n      <div style="max-width: 95%; margin: auto">\n        <app-servico-main></app-servico-main>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="currentTab === \'produtos\'">\n      <div style="max-width: 95%; margin: auto">\n        <app-produto-main></app-produto-main>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf="currentTab === \'planos\'">\n      <div style="max-width: 95%; margin: auto">\n        <ng-container>\n          <app-plano-main (changeToItensMainEvent)="enableItem = true"></app-plano-main>\n        </ng-container>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf="currentTab === \'itens-planos\'">\n      <div style="max-width: 95%; margin: auto">\n        <ng-container>\n          <app-itens-de-plano-main (changeToPlanosMainEvent)="enableItem = false"></app-itens-de-plano-main>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n\n</ion-content>',styles:[""]})],x);const b=[{path:"",component:x}];let M=class{};M=(0,t.gn)([(0,a.LVF)({imports:[v.Bz.forChild(b)],exports:[v.Bz]})],M);var O=i(77604),p=i(9764),r=i(51740),E=i(50613),m=i(35593),g=i(82210),u=i(58783),D=i(92665),h=i(1236),I=i(73425),T=i(23520),A=i(17913),V=i(28396),be=i(25047),xe=i(32137),de=i(21493),ye=i(63054),Ie=i(61989),Pe=i(99983);let oe=class{constructor(){}ngOnInit(){}};oe.ctorParameters=()=>[],oe=(0,t.gn)([(0,a.wA2)({selector:"app-conta-main",template:"<p>\n  conta-main works!\n</p>\n",styles:[""]})],oe);var Oe=i(45447),he=i(85226);var B=i(50727),Q=i(81546),F=i(59256),C=i(98739);let H=class{constructor(e,n,s,o){this.formBuilder=e,this.produtosService=n,this.modal=s,this.toastService=o,this.isLoaded=!1,this.createdProdutoId="",this.wasCreated=!1,this.subscriptions=new B.w0,this.form=this.formBuilder.group({nome:[,[l.kI.required]],descricao:[,[l.kI.required]],preco_compra:[,[l.kI.required]],preco_venda:[,[l.kI.required]]})}ngOnInit(){}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const e=this.form.get("nome").value,n=this.form.get("descricao").value,s=this.form.get("preco_compra").value,o=this.form.get("preco_venda").value,c=this.produtosService.create({nome:e,descricao:n,preco_compra:s,preco_venda:o,imagem_principal_id:this.imagem_principal_id}).subscribe(_=>{this.createdProdutoId=_.id,this.wasCreated=!0,this.fechar()});this.subscriptions.add(c)}anexarImagemPrincipal(e,n){const s=e.files[0];n.clear(),this.produtosService.createImagemPrincipal(s).subscribe({next:o=>{const{id:c}=o;this.imagem_principal_id=c,this.toastService.presentToast({detalhe:"Imagem anexada!",duracao:C.m4.mediumDuration,gravidade:C.kl.SUCESSO,titulo:"Sucesso!"})}})}get imagemPrincipalId(){return this.imagem_principal_id}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableCreateBtn(){return!this.form.valid}};H.ctorParameters=()=>[{type:l.QS},{type:Q.m},{type:f.IN},{type:F.D}],H=(0,t.gn)([(0,a.wA2)({selector:"app-produto-cadastro",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Criar/Cadastrar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="preco_compra" class="font-medium text-900">Pre\xe7o de compra</label>\n              <p-inputNumber id="preco_compra" formControlName="preco_compra" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'preco_compra\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="preco_venda" class="font-medium text-900">Pre\xe7o de venda</label>\n              <p-inputNumber id="preco_venda" formControlName="preco_venda" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'preco_venda\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="imagem_principal" class="font-medium text-900">Imagem Principal</label>\n              <div *ngIf="imagem_principal_id" class="ml-3  pi pi-check text-green-600"></div>\n              <div *ngIf="!imagem_principal_id" class="ml-3  pi pi-times text-pink-600"></div>\n              <p-fileUpload #imagem_principal id="imagem_principal" mode="basic" name="imagem_principal"\n                chooseIcon="pi pi-upload" customUpload="true" [auto]="true"\n                (uploadHandler)="anexarImagemPrincipal($event, imagem_principal)" chooseLabel="Imagem Principal">\n              </p-fileUpload>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Criar" icon="pi pi-send" iconPos="right" class="w-auto" (click)="create()"\n              [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],H);let j=class{constructor(e,n,s,o){this.formBuilder=e,this.produtosService=n,this.modal=s,this.toastService=o,this.isLoaded=!1,this.createdProdutoId="",this.wasCreated=!1,this.subscriptions=new B.w0}ngOnInit(){const{nome:e,descricao:n,preco_compra:s,preco_venda:o}=this.produto;this.form=this.formBuilder.group({nome:[e,[l.kI.required]],descricao:[n,[l.kI.required]],preco_compra:[s,[l.kI.required]],preco_venda:[o,[l.kI.required]]})}ngOnDestroy(){this.subscriptions.unsubscribe()}update(){const{id:e}=this.produto,n=this.form.get("nome").value,s=this.form.get("descricao").value,o=Number(this.form.get("preco_compra").value),c=Number(this.form.get("preco_venda").value),_=this.produtosService.update(e,{nome:n,descricao:s,preco_compra:o,preco_venda:c,imagem_principal_id:this.imagem_principal_id}).subscribe(w=>{this.createdProdutoId=w.id,this.wasCreated=!0,this.fechar()});this.subscriptions.add(_)}fechar(){this.modal.dismiss(this.wasCreated)}anexarImagemPrincipal(e,n){const s=e.files[0];n.clear(),this.produtosService.createImagemPrincipal(s).subscribe({next:o=>{const{id:c}=o;this.imagem_principal_id=c,this.toastService.presentToast({detalhe:"Imagem anexada!",duracao:C.m4.mediumDuration,gravidade:C.kl.SUCESSO,titulo:"Sucesso!"})}})}get imagemPrincipalId(){return this.imagem_principal_id}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableAtualizarBtn(){return!this.form.valid}};j.ctorParameters=()=>[{type:l.QS},{type:Q.m},{type:f.IN},{type:F.D}],j.propDecorators={produto:[{type:a.IIB}]},j=(0,t.gn)([(0,a.wA2)({selector:"app-produto-detail",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Atualizar/Editar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="preco_compra" class="font-medium text-900">Pre\xe7o de compra</label>\n              <p-inputNumber id="preco_compra" formControlName="preco_compra" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'preco_compra\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="preco_venda" class="font-medium text-900">Pre\xe7o de venda</label>\n              <p-inputNumber id="preco_venda" formControlName="preco_venda" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'preco_venda\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="imagem_principal" class="font-medium text-900">Imagem Principal</label>\n              <div *ngIf="imagem_principal_id" class="ml-3  pi pi-check text-green-600"></div>\n              <div *ngIf="!imagem_principal_id" class="ml-3  pi pi-times text-pink-600"></div>\n              <p-fileUpload #imagem_principal id="imagem_principal" mode="basic" name="imagem_principal"\n                chooseIcon="pi pi-upload" customUpload="true" [auto]="true"\n                (uploadHandler)="anexarImagemPrincipal($event, imagem_principal)" chooseLabel="Imagem Principal">\n              </p-fileUpload>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Atualizar" icon="pi pi-send" iconPos="right" class="w-auto"\n              (click)="update()" [disabled]="disableAtualizarBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],j);var le=i(15861);var U=i(59136),Re=i(10289),Te=i(28921);let ie=class{constructor(e,n,s,o){this.produtoService=e,this.modal=n,this.toastService=s,this.router=o,this.sortOptions=[],this.searchedNome="",this.currentPage=1,this.isLoaded=!1,this.subscriptions=new B.w0}ngOnInit(){this.loadProdutos()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadProdutos(e=1,n){const s=this.produtoService.list({nome:n},{order:U.L.DESC,page:e,take:5}).subscribe(o=>{this.produtos=o,this.isLoaded=!0});this.subscriptions.add(s)}changeFiltro(e){const{value:n}=e;this.loadProdutos()}createNew(){this.showModal(H)}editar(e){this.showModal(j,{produto:e})}estoque(e){this.showModal(Te.R,{produto:e})}search(){this.loadProdutos(1,this.searchedNome)}paginar(e){const{first:n,rows:s}=e,o=Number(Number(n)/Number(s)+1);o!=this.currentPage&&(this.currentPage=o,this.loadProdutos(o))}redirectCarga(){const e={queryParams:{tab:"carregar",option:Re.oP.CARGA_PRODUTOS}};this.router.navigate(["/carga-dados"],e)}showModal(e,n){var s=this;return(0,le.Z)(function*(){const o=yield s.modal.create({component:e,backdropDismiss:!1,cssClass:"modal-size-80",componentProps:n});return o.onDidDismiss().then(c=>{const{data:_,role:w}=c;_&&(s.loadProdutos(s.currentPage),"estoque"!=w&&s.toastService.presentToast({detalhe:"Opera\xe7\xe3o bem sucedida!",titulo:"Sucesso!",duracao:C.m4.mediumDuration,gravidade:C.kl.SUCESSO}))}),yield o.present()})()}};ie.ctorParameters=()=>[{type:Q.m},{type:f.IN},{type:F.D},{type:v.F0}],ie=(0,t.gn)([(0,a.wA2)({selector:"app-produto-main",template:'<br>\n<div class="card main-view">\n  <p-dataView *ngIf="isLoaded" emptyMessage="Nada encontrado, experimente escolher outra carga" class="data-container"\n    #dv [lazy]="true" [value]="produtos.data" [paginator]="true" [rows]="produtos.meta.take"\n    [totalRecords]="produtos.meta.itemCount" [pageLinks]="produtos.meta.pageCount" (onLazyLoad)="paginar($event)"\n    filterBy="nome" layout="list">\n    <ng-template pTemplate="header">\n      <div class="flex flex-row justify-content-end mb-2">\n        <button class="sm:w-auto w-full" pButton pRipple icon="pi pi-plus" label="Novo" (click)="createNew()">\n        </button>\n      </div>\n      <div class="flex flex-row justify-content-end mb-2">\n        <button class="sm:w-auto w-full p-button p-button-outlined" iconPos="right" pButton pRipple label="Realizar carga de estoques"\n          icon="pi pi-external-link" (click)="redirectCarga()" ></button>\n      </div>\n\n      <div class="flex flex-column md:flex-row md:justify-content-center">\n        <span class="p-input-icon-right mb-2 md:mb-0 ">\n          <i class="pi pi-search cursor-pointer text-primary" (click)="search()"></i>\n          <input class="w-full" type="search" pInputText [(ngModel)]="searchedNome"\n            [ngModelOptions]="{standalone: true}" placeholder="Buscar por nome" (keyup.enter)="search()">\n        </span>\n      </div>\n\n    </ng-template>\n    <ng-template let-data pTemplate="listItem">\n      <div *ngIf="isLoaded" #templateGrid class="col-12">\n        <div class="data-list-item">\n          <div class="crop mb-2 md:mb-0 ">\n            <img class="border-circle border-2 border-primary"\n              [src]="data.imagem_principal_url || \'assets/imgs/outros/default-produto.png\'" [alt]="data.nome" />\n          </div>\n          <div class="data-list-detail">\n            <div class="data-name">{{ data.nome }}</div>\n            <div class="mt-1 mb-3">{{ data.descricao }}</div>\n            <div class="mt-1">Pre\xe7o de compra: {{ data.preco_compra | currency:\'BRL\': \'(R$)\' }}</div>\n            <div class="mt-1">Pre\xe7o de venda: {{ data.preco_venda | currency:\'BRL\': \'(R$)\'}}</div>\n          </div>\n          <div class="data-list-action">\n            <p-button icon="pi pi-pencil" label="Editar" (click)="editar(data)">\n            </p-button>\n            <button pButton type="button" class="p-button-outlined" icon="pi pi-table" label="Estoques"\n              (click)="estoque(data)">\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </p-dataView>\n</div>\n\n\n<p-confirmDialog [style]="{width: \'50vw\'}" [baseZIndex]="10000" rejectButtonStyleClass="p-button-text">\n</p-confirmDialog>',styles:[""]})],ie);var ae=i(7475);let Z=class{constructor(e,n,s){this.formBuilder=e,this.servicosService=n,this.modal=s,this.isLoaded=!1,this.createdServicoId="",this.wasCreated=!1,this.subscriptions=new B.w0,this.form=this.formBuilder.group({nome:[,[l.kI.required]],descricao:[,[l.kI.required]],custo_servico:[,[l.kI.required]],preco_servico:[,[l.kI.required]],is_remoto:[!1,[l.kI.required]],is_domicilio:[!1,[l.kI.required]]})}ngOnInit(){}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const e=this.form.get("nome").value,n=this.form.get("descricao").value,s=this.form.get("custo_servico").value,o=this.form.get("preco_servico").value,c=this.form.get("is_remoto").value,_=this.form.get("is_domicilio").value,w=this.servicosService.create({nome:e,descricao:n,custo_servico:s,is_domicilio:_,is_remoto:c,preco_servico:o}).subscribe(N=>{this.createdServicoId=N.id,this.wasCreated=!0,this.fechar()});this.subscriptions.add(w)}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableCreateBtn(){return!this.form.valid}};Z.ctorParameters=()=>[{type:l.QS},{type:ae.B},{type:f.IN}],Z=(0,t.gn)([(0,a.wA2)({selector:"app-servico-cadastro",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Criar/Cadastrar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="custo_servico" class="font-medium text-900">Custo do servi\xe7o</label>\n              <p-inputNumber id="custo_servico" formControlName="custo_servico" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'custo_servico\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="preco_servico" class="font-medium text-900">Pre\xe7o do servi\xe7o</label>\n              <p-inputNumber id="preco_servico" formControlName="preco_servico" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'preco_servico\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n            <div class="field mb-4 col-12 flex align-items-center">\n              <p-checkbox [binary]="true" formControlName="is_remoto"></p-checkbox>\n              <span class="ml-2 text-900">Pode ser feito remotamente</span>\n            </div>\n            <div class="field mb-4 col-12 flex align-items-center">\n              <p-checkbox [binary]="true" formControlName="is_domicilio"></p-checkbox>\n              <span class="ml-2 text-900">Pode ser feito \xe0 domic\xedlio</span>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Criar" icon="pi pi-send" iconPos="right" class="w-auto" (click)="create()"\n              [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],Z);let $=class{constructor(e,n,s){this.formBuilder=e,this.servicosService=n,this.modal=s,this.wasCreated=!1,this.subscriptions=new B.w0}ngOnInit(){const{nome:e,descricao:n,custo_servico:s,preco_servico:o,is_domicilio:c,is_remoto:_}=this.servico;this.form=this.formBuilder.group({nome:[e,[l.kI.required]],descricao:[n,[l.kI.required]],custo_servico:[s,[l.kI.required]],preco_servico:[o,[l.kI.required]],is_remoto:[_,[l.kI.required]],is_domicilio:[c,[l.kI.required]]})}ngOnDestroy(){this.subscriptions.unsubscribe()}atualizar(){const{id:e}=this.servico,n=this.form.get("nome").value,s=this.form.get("descricao").value,o=this.form.get("custo_servico").value,c=this.form.get("preco_servico").value,_=this.form.get("is_remoto").value,w=this.form.get("is_domicilio").value,N=this.servicosService.update(e,{nome:n,descricao:s,custo_servico:o,is_domicilio:w,is_remoto:_,preco_servico:c}).subscribe(se=>{this.wasCreated=!0,this.fechar()});this.subscriptions.add(N)}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableAtualizarBtn(){return!this.form.valid}};$.ctorParameters=()=>[{type:l.QS},{type:ae.B},{type:f.IN}],$.propDecorators={servico:[{type:a.IIB}]},$=(0,t.gn)([(0,a.wA2)({selector:"app-servico-detail",template:'<ion-content appScrollTheme>\n  <ng-container *ngIf="servico">\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Atualizar/Editar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="custo_servico" class="font-medium text-900">Custo do servi\xe7o</label>\n              <p-inputNumber id="custo_servico" formControlName="custo_servico" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'custo_servico\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="preco_servico" class="font-medium text-900">Pre\xe7o do servi\xe7o</label>\n              <p-inputNumber id="preco_servico" formControlName="preco_servico" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'preco_servico\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n            <div class="field mb-4 col-12 flex align-items-center">\n              <p-checkbox [binary]="true" formControlName="is_remoto"></p-checkbox>\n              <span class="ml-2 text-900">Pode ser feito remotamente</span>\n            </div>\n            <div class="field mb-4 col-12 flex align-items-center">\n              <p-checkbox [binary]="true" formControlName="is_domicilio"></p-checkbox>\n              <span class="ml-2 text-900">Pode ser feito \xe0 domic\xedlio</span>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Atualizar" icon="pi pi-send" iconPos="right" class="w-auto"\n              (click)="atualizar()" [disabled]="disableAtualizarBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],$);let re=class{constructor(e,n,s){this.servicoService=e,this.modal=n,this.toastService=s,this.sortOptions=[],this.searchedNome="",this.currentPage=1,this.isLoaded=!1,this.subscriptions=new B.w0}ngOnInit(){this.loadServicos()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadServicos(e=1,n){const s=this.servicoService.list({nome:n},{order:U.L.DESC,page:e,take:5}).subscribe(o=>{this.servicos=o,this.isLoaded=!0});this.subscriptions.add(s)}changeFiltro(e){const{value:n}=e;this.loadServicos()}createNew(){this.showModal(Z)}editar(e){this.showModal($,{servico:e})}search(){this.loadServicos(1,this.searchedNome)}paginar(e){const{first:n,rows:s}=e,o=Number(Number(n)/Number(s)+1);o!=this.currentPage&&(this.currentPage=o,this.loadServicos(o))}showModal(e,n){var s=this;return(0,le.Z)(function*(){const o=yield s.modal.create({component:e,backdropDismiss:!1,cssClass:"modal-size-80",componentProps:n});return o.onDidDismiss().then(c=>{const{data:_}=c;_&&(s.loadServicos(),s.toastService.presentToast({detalhe:"Opera\xe7\xe3o bem sucedida!",titulo:"Sucesso!",duracao:C.m4.mediumDuration,gravidade:C.kl.SUCESSO}))}),yield o.present()})()}};re.ctorParameters=()=>[{type:ae.B},{type:f.IN},{type:F.D}],re=(0,t.gn)([(0,a.wA2)({selector:"app-servico-main",template:'<br>\n<div class="card main-view">\n  <p-dataView *ngIf="isLoaded" emptyMessage="Nada encontrado, experimente escolher outra carga" class="data-container"\n    #dv [lazy]="true" [value]="servicos.data" [paginator]="true" [rows]="servicos.meta.take"\n    [totalRecords]="servicos.meta.itemCount" [pageLinks]="servicos.meta.pageCount" (onLazyLoad)="paginar($event)"\n    filterBy="nome" layout="list">\n    <ng-template pTemplate="header">\n      <div class="flex flex-row justify-content-end mb-2">\n        <button class="sm:w-auto w-full" pButton pRipple icon="pi pi-plus" label="Novo" (click)="createNew()">\n        </button>\n      </div>\n\n      <div class="flex flex-column md:flex-row md:justify-content-center">\n        <span class="p-input-icon-right mb-2 md:mb-0 ">\n          <i class="pi pi-search cursor-pointer text-primary" (click)="search()"></i>\n          <input class="w-full" type="search" pInputText [(ngModel)]="searchedNome" [ngModelOptions]="{standalone: true}"\n            placeholder="Buscar por nome" (keyup.enter)="search()">\n        </span>\n      </div>\n\n    </ng-template>\n    <ng-template let-data pTemplate="listItem">\n      <div *ngIf="isLoaded" #templateGrid class="col-12">\n        <div class="data-list-item">\n          <div class="data-list-detail">\n            <div class="data-name">{{ data.nome }}</div>\n            <div class="mt-1 mb-3">{{ data.descricao }}</div>\n            <div class="mt-1">Custo do servi\xe7o: {{ data.custo_servico | currency:\'BRL\': \'(R$)\' }}</div>\n            <div class="mt-1">Pre\xe7o do servi\xe7o: {{ data.preco_servico | currency:\'BRL\': \'(R$)\'}}</div>\n          </div>\n          <div class="data-list-action">\n            <p-button icon="pi pi-pencil" label="Editar" (click)="editar(data)">\n            </p-button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </p-dataView>\n</div>\n\n\n<p-confirmDialog [style]="{width: \'50vw\'}" [baseZIndex]="10000" rejectButtonStyleClass="p-button-text">\n</p-confirmDialog>',styles:[""]})],re);var ue=i(42732);let K=class{constructor(e,n,s){this.formBuilder=e,this.planosService=n,this.modal=s,this.selectedPlanoId="",this.isLoaded=!1,this.wasCreated=!1,this.suggestionedValues={valor_trimestral:0,valor_semestral:0,valor_anual:0,custo_mensal:0},this.itens_associar=[],this.itens_desassociar=[],this.loaded_itens=[],this.subscriptions=new B.w0}ngOnInit(){const{nome:e,descricao:n,valor_mensal:s,valor_trimestral:o,valor_semestral:c,valor_anual:_,custo_mensal:w,itens:N,id:se}=this.plano;this.selectedPlanoId=se,this.loaded_itens=N.map(dt=>dt.item),this.form=this.formBuilder.group({nome:[e,[l.kI.required]],descricao:[n,[l.kI.required]],valor_mensal:[s,[l.kI.required]],valor_trimestral:[o,[]],valor_semestral:[c,[]],valor_anual:[_,[]],custo_mensal:[w,[]]}),this.generateSuggestionValue(s),this.getSelectedItens(this.loaded_itens)}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const e=this.form.get("nome").value,n=this.form.get("descricao").value,s=Number(this.form.get("valor_mensal").value),o=null==this.form.get("valor_trimestral").value?void 0:Number(this.form.get("valor_trimestral").value),c=null==this.form.get("valor_semestral").value?void 0:Number(this.form.get("valor_semestral").value),_=null==this.form.get("valor_anual").value?void 0:Number(this.form.get("valor_anual").value),w=null==this.form.get("custo_mensal").value?void 0:Number(this.form.get("custo_mensal").value),N=this.planosService.update(this.selectedPlanoId,{nome:e,descricao:n,valor_mensal:s,valor_trimestral:o,valor_semestral:c,valor_anual:_,custo_mensal:w,itens_associar:this.itens_associar,itens_desassociar:this.itens_desassociar}).subscribe(se=>{this.wasCreated=!0,this.fechar()});this.subscriptions.add(N)}generateSuggestionValue({value:e}){const n=Number(e);if(isNaN(n)||!n)return this.suggestionedValues.valor_anual=0,this.suggestionedValues.valor_semestral=0,void(this.suggestionedValues.valor_trimestral=0);const s=3*n*.9,o=2*s*.9,c=2*o*.9;this.suggestionedValues.valor_anual=c,this.suggestionedValues.valor_semestral=o,this.suggestionedValues.valor_trimestral=s}getSelectedItens(e){if(!e||e.length<=0)return;const{itens_associar:n,custo_mensal:s}=e.reduce((o,c)=>(c.custo&&null!==c.custo&&(o.custo_mensal+=Number(c.custo)),o.itens_associar.push(c.id),o),{itens_associar:[],custo_mensal:0});this.itens_associar=n,this.suggestionedValues.custo_mensal=isNaN(s)?0:Number(s)}getUnselectedItens(e){this.itens_desassociar=e.map(n=>n.id)}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableCreateBtn(){return!this.form.valid}};K.ctorParameters=()=>[{type:l.QS},{type:ue.w},{type:f.IN}],K.propDecorators={plano:[{type:a.IIB}]},K=(0,t.gn)([(0,a.wA2)({selector:"app-plano-detail",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Atualizar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_mensal" class="font-medium text-900">Valor mensal</label>\n              <p-inputNumber id="valor_mensal" formControlName="valor_mensal" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2" (onInput)="generateSuggestionValue($event)"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'valor_mensal\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_trimestral" class="font-medium text-900">Valor trimestral <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="valor_trimestral" formControlName="valor_trimestral" mode="decimal"\n                [minFractionDigits]="2" [maxFractionDigits]="2"\n                [placeholder]="\'Valor sugerido: R$ \' + suggestionedValues.valor_trimestral.toFixed(2)"></p-inputNumber>\n            </div>\n\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_semestral" class="font-medium text-900">Valor semestral <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="valor_semestral" formControlName="valor_semestral" mode="decimal"\n                [minFractionDigits]="2" [maxFractionDigits]="2"\n                [placeholder]="\'Valor sugerido: R$ \' + suggestionedValues.valor_semestral.toFixed(2)"></p-inputNumber>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_semestral" class="font-medium text-900">Valor anual <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="valor_anual" formControlName="valor_anual" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"\n                [placeholder]="\'Valor sugerido: R$ \' + suggestionedValues.valor_anual.toFixed(2)"></p-inputNumber>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 ">\n              <app-itens-de-plano-selection [itens_associados]="loaded_itens"\n                (unselectedItensEvent)="getUnselectedItens($event)"\n                (selectedItensEvent)="getSelectedItens($event)"></app-itens-de-plano-selection>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 ">\n              <label for="custo_mensal" class="font-medium text-900">Custo mensal <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="custo_mensal" formControlName="custo_mensal" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"\n                [placeholder]="\'Custo estimado: R$ \' + suggestionedValues.custo_mensal.toFixed(2)"></p-inputNumber>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Atualizar" icon="pi pi-send" iconPos="right" class="w-auto"\n              (click)="create()" [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],K);let J=class{constructor(e,n,s){this.formBuilder=e,this.planosService=n,this.modal=s,this.isLoaded=!1,this.createdPlanoId="",this.wasCreated=!1,this.suggestionedValues={valor_trimestral:0,valor_semestral:0,valor_anual:0,custo_mensal:0},this.itens_associar=[],this.subscriptions=new B.w0,this.form=this.formBuilder.group({nome:[,[l.kI.required]],descricao:[,[l.kI.required]],valor_mensal:[,[l.kI.required]],valor_trimestral:[,[]],valor_semestral:[,[]],valor_anual:[,[]],custo_mensal:[,[]]})}ngOnInit(){}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const e=this.form.get("nome").value,n=this.form.get("descricao").value,s=this.form.get("valor_mensal").value,o=null==this.form.get("valor_trimestral").value?void 0:this.form.get("valor_trimestral").value,c=null==this.form.get("valor_semestral").value?void 0:this.form.get("valor_semestral").value,_=null==this.form.get("valor_anual").value?void 0:this.form.get("valor_anual").value,w=null==this.form.get("custo_mensal").value?void 0:this.form.get("custo_mensal").value,N=this.planosService.create({nome:e,descricao:n,valor_mensal:s,valor_trimestral:o,valor_semestral:c,valor_anual:_,custo_mensal:w,itens_associar:this.itens_associar}).subscribe(se=>{this.createdPlanoId=se.id,this.wasCreated=!0,this.fechar()});this.subscriptions.add(N)}generateSuggestionValue({value:e}){const n=Number(e);if(isNaN(n)||!n)return this.suggestionedValues.valor_anual=0,this.suggestionedValues.valor_semestral=0,void(this.suggestionedValues.valor_trimestral=0);const s=3*n*.9,o=2*s*.9,c=2*o*.9;this.suggestionedValues.valor_anual=c,this.suggestionedValues.valor_semestral=o,this.suggestionedValues.valor_trimestral=s}getSelectedItens(e){if(!e||e.length<=0)return;const{itens_associar:n,custo_mensal:s}=e.reduce((o,c)=>(c.custo&&null!==c.custo&&(o.custo_mensal+=Number(c.custo)),o.itens_associar.push(c.id),o),{itens_associar:[],custo_mensal:0});this.itens_associar=n,this.suggestionedValues.custo_mensal=isNaN(s)?0:Number(s)}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableCreateBtn(){return!this.form.valid}};J.ctorParameters=()=>[{type:l.QS},{type:ue.w},{type:f.IN}],J=(0,t.gn)([(0,a.wA2)({selector:"app-plano-cadastro",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Criar/Cadastrar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_mensal" class="font-medium text-900">Valor mensal</label>\n              <p-inputNumber id="valor_mensal" formControlName="valor_mensal" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2" (onInput)="generateSuggestionValue($event)"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'valor_mensal\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_trimestral" class="font-medium text-900">Valor trimestral <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="valor_trimestral" formControlName="valor_trimestral" mode="decimal"\n                [minFractionDigits]="2" [maxFractionDigits]="2"\n                [placeholder]="\'Valor sugerido: R$ \' + suggestionedValues.valor_trimestral.toFixed(2)"></p-inputNumber>\n            </div>\n\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_semestral" class="font-medium text-900">Valor semestral <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="valor_semestral" formControlName="valor_semestral" mode="decimal"\n                [minFractionDigits]="2" [maxFractionDigits]="2"\n                [placeholder]="\'Valor sugerido: R$ \' + suggestionedValues.valor_semestral.toFixed(2)"></p-inputNumber>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="valor_semestral" class="font-medium text-900">Valor anual <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="valor_anual" formControlName="valor_anual" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"\n                [placeholder]="\'Valor sugerido: R$ \' + suggestionedValues.valor_anual.toFixed(2)"></p-inputNumber>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 ">\n              <app-itens-de-plano-selection\n                (selectedItensEvent)="getSelectedItens($event)"></app-itens-de-plano-selection>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 ">\n              <label for="custo_mensal" class="font-medium text-900">Custo mensal <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="custo_mensal" formControlName="custo_mensal" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"\n                [placeholder]="\'Custo estimado: R$ \' + suggestionedValues.custo_mensal.toFixed(2)"></p-inputNumber>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Criar" icon="pi pi-send" iconPos="right" class="w-auto" (click)="create()"\n              [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],J);var _e=i(41117);let G=class{constructor(e,n,s){this.planoService=e,this.modal=n,this.toastService=s,this.changeToItensMainEvent=new a.vpe,this.sortOptions=[],this.searchedPlano="",this.currentPage=1,this.isLoaded=!1,this.contentError=new _e.S,this.subscriptions=new B.w0}ngOnInit(){this.loadPlanos()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadPlanos(e=1,n){const s=this.planoService.list({searchedPlano:n},{order:U.L.DESC,page:e,take:5}).subscribe({next:o=>{this.planos=o,this.isLoaded=!0},error:o=>{this.contentError={code:o.status,hasError:!0}}});this.subscriptions.add(s)}changeFiltro(e){const{value:n}=e;this.loadPlanos()}createNew(){this.showModal(J)}editar(e){this.showModal(K,{plano:e})}showItens(e){}enableItensDePlano(){this.changeToItensMainEvent.emit(!0)}search(){this.loadPlanos(1,this.searchedPlano)}paginar(e){const{first:n,rows:s}=e,o=Number(Number(n)/Number(s)+1);o!=this.currentPage&&(this.currentPage=o,this.loadPlanos(o))}showModal(e,n){var s=this;return(0,le.Z)(function*(){const o=yield s.modal.create({component:e,backdropDismiss:!1,cssClass:"modal-size-80",componentProps:n});return o.onDidDismiss().then(c=>{const{data:_,role:w}=c;_&&(s.toastService.presentToast({detalhe:"Opera\xe7\xe3o bem sucedida!",titulo:"Sucesso!",duracao:C.m4.mediumDuration,gravidade:C.kl.SUCESSO}),s.loadPlanos(s.currentPage))}),yield o.present()})()}};G.ctorParameters=()=>[{type:ue.w},{type:f.IN},{type:F.D}],G.propDecorators={changeToItensMainEvent:[{type:a.r_U}]},G=(0,t.gn)([(0,a.wA2)({selector:"app-plano-main",template:'<br>\n<div class="card main-view">\n  <ng-container *ngIf="isLoaded">\n  <p-dataView  emptyMessage="Nada encontrado, experimente escolher outro filtro" class="data-container"\n    #dv [lazy]="true" [value]="planos.data" [paginator]="true" [rows]="planos.meta.take"\n    [totalRecords]="planos.meta.itemCount" [pageLinks]="planos.meta.pageCount" (onLazyLoad)="paginar($event)"\n    filterBy="nome" layout="list">\n    <ng-template pTemplate="header">\n      <div class="flex flex-row  justify-content-end mb-2">\n        <button pButton pRipple class=" sm:w-auto w-full " icon="pi pi-plus" label="Novo" (click)="createNew()">\n        </button>\n      </div>\n\n      <div class="flex flex-column md:flex-row md:justify-content-center">\n        <span class="p-input-icon-right mb-2 md:mb-0 ">\n          <i class="pi pi-search cursor-pointer text-primary" (click)="search()"></i>\n          <input class="w-full" type="search" pInputText [(ngModel)]="searchedPlano"\n            [ngModelOptions]="{standalone: true}" placeholder="Buscar " (keyup.enter)="search()">\n        </span>\n      </div>\n\n    </ng-template>\n    <ng-template let-data pTemplate="listItem">\n      <div *ngIf="isLoaded" #templateGrid class="col-12">\n        <div class="data-list-item">\n          <div class="data-list-detail">\n            <div class="data-name">{{ data.nome }}</div>\n            <div class="mt-1 mb-3">{{ data.descricao }}</div>\n            <div class="mt-1">Custo mensal: {{ data.custo_mensal ? (data.custo_mensal | currency:\'BRL\': \'(R$)\') : (\'N\xe3o\n              estipulado\') }}</div>\n            <div class="mt-3">Pre\xe7o mensal: {{ data.valor_mensal | currency:\'BRL\': \'(R$)\' }}</div>\n            <div class="mt-1">Pre\xe7o trimestral: {{ data.valor_trimestral ? (data.valor_trimestral | currency:\'BRL\':\n              \'(R$)\') : (\'N\xe3o cadastrado\') }}</div>\n            <div class="mt-1">Pre\xe7o semestral: {{ data.valor_semestral ? (data.valor_semestral | currency:\'BRL\': \'(R$)\')\n              : (\'N\xe3o cadastrado\') }}</div>\n            <div class="mt-1">Pre\xe7o anual: {{ data.valor_anual ? (data.valor_anual | currency:\'BRL\': \'(R$)\') : (\'N\xe3o\n              cadastrado\') }}</div>\n          </div>\n          <div class="data-list-action">\n            <p-button icon="pi pi-pencil" label="Editar" (click)="editar(data)">\n            </p-button>\n            \x3c!--\n              <button pButton type="button" class="p-button-outlined" icon="pi pi-tags" label="Itens"\n              (click)="showItens(data)">\n            </button>\n            --\x3e\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </p-dataView>\n  </ng-container>\n\n\n  <ng-container *ngIf="contentError.hasError">\n    <app-content-error [erroCode]="contentError.code"></app-content-error>\n  </ng-container>\n</div>\n\n\n<p-confirmDialog [style]="{width: \'50vw\'}" [baseZIndex]="10000" rejectButtonStyleClass="p-button-text">\n</p-confirmDialog>',styles:[""]})],G);var Ze=i(80529),Je=i(40199),Ge=i(55583),ce=i(99038);let z=class{constructor(e){this.http=e}list(e,n=new Je.k){let s=Ge.t.getPageOptionsParams(n);return e&&e.nome&&(s=s.append("nome",e.nome)),e&&e.descricao&&(s=s.append("descricao",e.descricao)),e&&e.searchedItem&&(s=s.append("searchedItem",e.searchedItem)),e&&e.created_at&&(s=s.append("created_at",e.created_at.toDateString())),this.http.get(`${ce.Hz.baseURL}/item-de-planos`,{responseType:"json",params:s})}findById(e){return this.http.get(`${ce.Hz.baseURL}/item-de-planos/${e}`,{responseType:"json"})}create(e){return this.http.post(`${ce.Hz.baseURL}/item-de-planos`,e,{responseType:"json"})}update(e,n){return this.http.put(`${ce.Hz.baseURL}/item-de-planos/${e}`,n,{responseType:"json"})}};var L,y;z.ctorParameters=()=>[{type:Ze.eN}],z=(0,t.gn)([(0,a.GSi)({providedIn:"root"})],z),(y=L||(L={})).NAO="NAO",y.PRODUTO="PRODUTO",y.SERVICO="SERVICO";let Y=class{constructor(e,n,s,o,c,_){this.formBuilder=e,this.itemDePlanoService=n,this.modal=s,this.servicosService=o,this.produtosService=c,this.toastService=_,this.isLoaded=!1,this.createdPlanoItemId="",this.wasCreated=!1,this.suggestionedValues={custo_estimado:"indetermin\xe1vel",custo_original:null,quantidade:null},this.associacao=L.NAO,this.searchedServico="",this.showServicoDialog=!1,this.searchedProduto="",this.showProdutoDialog=!1,this.subscriptions=new B.w0,this.loadProdutos(),this.loadServicos()}ngOnInit(){this.form=this.formBuilder.group({nome:[,[l.kI.required]],descricao:[,[l.kI.required]],custo:[,[]],quantidade:[,[]],servico:[,[]],produto:[,[]]})}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const e=this.form.get("nome").value,n=this.form.get("descricao").value,s=null==this.form.get("custo").value?void 0:Number(this.form.get("custo").value),o=null==this.form.get("quantidade").value?void 0:Number(this.form.get("quantidade").value),c=null==this.form.get("servico").value?void 0:this.form.get("servico").value.id,_=null==this.form.get("produto").value?void 0:this.form.get("produto").value.id,w=this.itemDePlanoService.create({nome:e,descricao:n,custo:s,quantidade:o,servico_id:c,produto_id:_}).subscribe(N=>{this.createdPlanoItemId=N.id,this.wasCreated=!0,this.fechar()});this.subscriptions.add(w)}generateSuggestionValue({value:e}){const n=e.custo_servico?Number(e.custo_servico):Number(e.preco_compra);if(isNaN(n)||!n)return this.suggestionedValues.custo_estimado="indetermin\xe1vel",void(this.suggestionedValues.custo_original=null);if(null==this.suggestionedValues.quantidade)return this.suggestionedValues.custo_estimado="indetermin\xe1vel",void(this.suggestionedValues.custo_original=n);const s=n*this.suggestionedValues.quantidade;this.suggestionedValues.custo_original=n,this.suggestionedValues.custo_estimado=isNaN(s)?"indetermin\xe1vel":s.toFixed(2)}generateSuggestionQuantidade({value:e}){if(isNaN(e)||!e)return this.suggestionedValues.quantidade=null,void(this.suggestionedValues.custo_estimado="indetermin\xe1vel");this.suggestionedValues.quantidade=e;const n=null==this.suggestionedValues.custo_original?void 0:Number(this.suggestionedValues.custo_original)*e;this.suggestionedValues.custo_estimado=isNaN(n)?"indetermin\xe1vel":n.toFixed(2)}clearSuggestion(){this.suggestionedValues.custo_estimado="indetermin\xe1vel",this.suggestionedValues.custo_original=null,this.form.get("servico").setValue(void 0),this.form.get("produto").setValue(void 0)}loadServicos(e=1,n){const s=this.servicosService.list({searchedServico:this.searchedServico},{order:U.L.ASC,page:e,take:10}).subscribe(o=>{this.servicos=o,n&&n.show()});this.subscriptions.add(s)}paginarServico(e){this.loadServicos()}onServicoFilter(e){const n=e.filter;this.searchedServico=n}blurServico(e,n){this.searchedServico=void 0,n.filterValue=void 0}detailServico(){this.selectedServico=this.form.get("servico").value,this.selectedServico?this.showServicoDialog=!0:this.toastService.presentToast({detalhe:"Selecione um servi\xe7o primeiro",titulo:"Sele\xe7\xe3o necess\xe1ria",duracao:C.m4.shortDuration,gravidade:C.kl.INFORMACAO})}loadProdutos(e=1,n){const s=this.produtosService.list({searchedProduto:this.searchedProduto},{order:U.L.ASC,page:e,take:10}).subscribe(o=>{this.produtos=o,n&&n.show()});this.subscriptions.add(s)}paginarProduto(e){this.loadProdutos()}onProdutoFilter(e){const n=e.filter;this.searchedProduto=n}blurProduto(e,n){this.searchedProduto=void 0,n.filterValue=void 0}detailProduto(){this.selectedProduto=this.form.get("produto").value,this.selectedProduto?this.showProdutoDialog=!0:this.toastService.presentToast({detalhe:"Selecione um produto primeiro",titulo:"Sele\xe7\xe3o necess\xe1ria",duracao:C.m4.shortDuration,gravidade:C.kl.INFORMACAO})}getNoOption(){return L.NAO}getServicoOption(){return L.SERVICO}getProdutoOption(){return L.PRODUTO}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableCreateBtn(){return!this.form.valid}};Y.ctorParameters=()=>[{type:l.QS},{type:z},{type:f.IN},{type:ae.B},{type:Q.m},{type:F.D}],Y=(0,t.gn)([(0,a.wA2)({selector:"app-itens-de-plano-cadastro",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Criar/Cadastrar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n            <ng-container>\n              <div class="text-900 font-medium text-xl mt-4 lg:mt-0 mb-4 px-2">Associar?</div>\n              <div class="field-radiobutton mb-4 col-12 ">\n                <p-radioButton name="associar_mode" [value]="getNoOption()" [(ngModel)]="associacao"\n                  [ngModelOptions]="{standalone: true}" inputId="nao" (onClick)="clearSuggestion()">\n                </p-radioButton>\n                <label for="nao">N\xe3o</label>\n              </div>\n              <div class="field-radiobutton mb-4 col-12 ">\n                <p-radioButton name="associar_mode" [value]="getServicoOption()" [(ngModel)]="associacao"\n                  [ngModelOptions]="{standalone: true}" inputId="servico" (onClick)="clearSuggestion()">\n                </p-radioButton>\n                <label for="servico">Servi\xe7o</label>\n              </div>\n              <div class="field-radiobutton mb-4 col-12 ">\n                <p-radioButton name="associar_mode" [value]="getProdutoOption()" [(ngModel)]="associacao"\n                  [ngModelOptions]="{standalone: true}" inputId="produto" (onClick)="clearSuggestion()"></p-radioButton>\n                <label for="produto">Produto</label>\n              </div>\n\n              <div *ngIf="servicos && associacao == \'SERVICO\'" class="col-8 lg:col-10 field mb-5">\n                <label for="servicos" class="text-900 font-medium mb-3">Servi\xe7o a ser associado</label>\n                <div class="ml-3 cursor-pointer pi pi-question-circle" (click)="detailServico()"></div>\n                <p-dropdown id="servicos" #drop_servico [options]="servicos.data" formControlName="servico"\n                  optionLabel="nome" [filter]="true" placeholder="Selecione um servi\xe7o" [virtualScroll]="true"\n                  [virtualScrollItemSize]="38" [lazy]="true"\n                  (onLazyLoad)="paginarServico($event)" (onFilter)="onServicoFilter($event)"\n                  (onFocus)="blurServico($event, drop_servico)" (onChange)="generateSuggestionValue($event)">\n                  <ng-template pTemplate="loader" let-options="options">\n                    <div class="flex align-items-center py-2 px-3" style="height: 38px">\n                      <p-skeleton [width]="options.even ? \'60%\' : \'50%\'" height="1rem"></p-skeleton>\n                    </div>\n                  </ng-template>\n                </p-dropdown>\n              </div>\n              <div *ngIf="produtos && associacao == \'PRODUTO\'" class="col-8 lg:col-10 field mb-5">\n                <label for="produtos" class="text-900 font-medium mb-3">Produto a ser associado</label>\n                <div class="ml-3 cursor-pointer pi pi-question-circle" (click)="detailProduto()"></div>\n                <p-dropdown id="produtos" #drop_produto [options]="produtos.data" formControlName="produto"\n                  optionLabel="nome" [filter]="true" placeholder="Selecione um produto" [virtualScroll]="true"\n                  [virtualScrollItemSize]="38" [lazy]="true"\n                  (onLazyLoad)="paginarProduto($event)" (onFilter)="onProdutoFilter($event)"\n                  (onFocus)="blurProduto($event, drop_produto)" (onChange)="generateSuggestionValue($event)">\n                  <ng-template pTemplate="loader" let-options="options">\n                    <div class="flex align-items-center py-2 px-3" style="height: 38px">\n                      <p-skeleton [width]="options.even ? \'60%\' : \'50%\'" height="1rem"></p-skeleton>\n                    </div>\n                  </ng-template>\n                </p-dropdown>\n              </div>\n            </ng-container>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="quantidade" class="font-medium text-900">Quantidade <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="quantidade" formControlName="quantidade"\n                (onInput)="generateSuggestionQuantidade($event)"></p-inputNumber>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="custo" class="font-medium text-900">Custo <span class="text-xs">(opcional)</span> </label>\n              <p-inputNumber id="custo" formControlName="custo" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"\n                [placeholder]="\'Custo estimado: R$ \' + suggestionedValues.custo_estimado"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'custo\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Criar" icon="pi pi-send" iconPos="right" class="w-auto" (click)="create()"\n              [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>\n\n\n<app-question-servico [showDialog]="showServicoDialog" [selectedServico]="selectedServico"\n  (closeEvent)="selectedServico = undefined; showServicoDialog = false;"></app-question-servico>\n<app-question-produto *ngIf="selectedProduto" [showDialog]="showQuestionProduto" [selectedProduto]="selectedProduto"\n  (closeEvent)="selectedProduto = undefined; showQuestionProduto = false;"></app-question-produto>',styles:[""]})],Y);let W=class{constructor(e,n,s,o,c,_){this.formBuilder=e,this.itemDePlanoService=n,this.modal=s,this.servicosService=o,this.produtosService=c,this.toastService=_,this.isLoaded=!1,this.wasCreated=!1,this.suggestionedValues={custo_estimado:"indetermin\xe1vel",custo_original:null,quantidade:null},this.associacao=L.NAO,this.searchedServico="",this.showServicoDialog=!1,this.searchedProduto="",this.showProdutoDialog=!1,this.subscriptions=new B.w0,this.loadProdutos(),this.loadServicos()}ngOnInit(){const{nome:e,descricao:n,custo:s,quantidade:o,servico:c,produto:_}=this.itemDePlano;this.form=this.formBuilder.group({nome:[e,[l.kI.required]],descricao:[n,[l.kI.required]],custo:[s,[]],quantidade:[o,[]],servico:[c?.id,[]],produto:[_?.id,[]]}),this.suggestionedValues.quantidade=o||null,c?(this.associacao=L.SERVICO,this.suggestionedValues.custo_original=c.custo_servico,this.suggestionedValues.custo_estimado=(Number(this.suggestionedValues.custo_original)*Number(o)).toFixed(2)):_?(this.associacao=L.PRODUTO,this.suggestionedValues.custo_original=_.preco_compra,this.suggestionedValues.custo_estimado=(Number(this.suggestionedValues.custo_original)*Number(o)).toFixed(2)):this.associacao=L.NAO}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const{id:e}=this.itemDePlano,n=this.form.get("nome").value,s=this.form.get("descricao").value,o=null==this.form.get("custo").value?null:Number(this.form.get("custo").value),c=null==this.form.get("quantidade").value?null:Number(this.form.get("quantidade").value),_=null==this.form.get("servico").value?void 0:this.form.get("servico").value,w=null==this.form.get("produto").value?void 0:this.form.get("produto").value,N=this.itemDePlanoService.update(e,{nome:n,descricao:s,custo:o,quantidade:c,servico_id:_,produto_id:w}).subscribe(se=>{this.wasCreated=!0,this.fechar()});this.subscriptions.add(N)}generateSuggestionValue({value:e}){let n;n=this.servicos.data.find(c=>c.id==e),n||(n=this.produtos.data.find(c=>c.id==e));const s=n.custo_servico?Number(n.custo_servico):Number(n.preco_compra);if(isNaN(s)||!s)return this.suggestionedValues.custo_estimado="indetermin\xe1vel",void(this.suggestionedValues.custo_original=null);if(null==this.suggestionedValues.quantidade)return this.suggestionedValues.custo_estimado="indetermin\xe1vel",void(this.suggestionedValues.custo_original=s);const o=s*this.suggestionedValues.quantidade;this.suggestionedValues.custo_original=s,this.suggestionedValues.custo_estimado=isNaN(o)?"indetermin\xe1vel":o.toFixed(2)}generateSuggestionQuantidade({value:e}){if(isNaN(e)||!e)return this.suggestionedValues.quantidade=null,void(this.suggestionedValues.custo_estimado="indetermin\xe1vel");this.suggestionedValues.quantidade=e;const n=null==this.suggestionedValues.custo_original?void 0:Number(this.suggestionedValues.custo_original)*e;this.suggestionedValues.custo_estimado=isNaN(n)?"indetermin\xe1vel":n.toFixed(2)}clearSuggestion(){this.suggestionedValues.custo_estimado="indetermin\xe1vel",this.suggestionedValues.custo_original=null,this.form.get("servico").setValue(void 0),this.form.get("produto").setValue(void 0)}loadServicos(e=1,n){const s=this.servicosService.list({searchedServico:this.searchedServico},{order:U.L.ASC,page:e,take:10}).subscribe(o=>{this.servicos=o,n&&n.show()});this.subscriptions.add(s)}paginarServico(e){this.loadServicos()}onServicoFilter(e){const n=e.filter;this.searchedServico=n}blurServico(e,n){this.searchedServico=void 0,n.filterValue=void 0}detailServico(){const e=this.form.get("servico").value;this.selectedServico=this.servicos.data.find(n=>n.id==e),this.selectedServico?this.showServicoDialog=!0:this.toastService.presentToast({detalhe:"Selecione um servi\xe7o primeiro",titulo:"Sele\xe7\xe3o necess\xe1ria",duracao:C.m4.shortDuration,gravidade:C.kl.INFORMACAO})}loadProdutos(e=1,n){const s=this.produtosService.list({searchedProduto:this.searchedProduto},{order:U.L.ASC,page:e,take:10}).subscribe(o=>{this.produtos=o,n&&n.show()});this.subscriptions.add(s)}paginarProduto(e){this.loadProdutos()}onProdutoFilter(e){const n=e.filter;this.searchedProduto=n}blurProduto(e,n){this.searchedProduto=void 0,n.filterValue=void 0}detailProduto(){const e=this.form.get("produto").value;this.selectedProduto=this.produtos.data.find(n=>n.id==e),this.selectedProduto?this.showProdutoDialog=!0:this.toastService.presentToast({detalhe:"Selecione um produto primeiro",titulo:"Sele\xe7\xe3o necess\xe1ria",duracao:C.m4.shortDuration,gravidade:C.kl.INFORMACAO})}getNoOption(){return L.NAO}getServicoOption(){return L.SERVICO}getProdutoOption(){return L.PRODUTO}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(e){return!(this.form.controls[e].untouched||!this.form.controls[e].errors)}disableCreateBtn(){return!this.form.valid}};W.ctorParameters=()=>[{type:l.QS},{type:z},{type:f.IN},{type:ae.B},{type:Q.m},{type:F.D}],W.propDecorators={itemDePlano:[{type:a.IIB}]},W=(0,t.gn)([(0,a.wA2)({selector:"app-itens-de-plano-detail",template:'<ion-content appScrollTheme>\n  <ng-container>\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Atualizar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="nome" class="font-medium text-900">Nome</label>\n              <input id="nome" type="text" pInputText formControlName="nome">\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'nome\')"></p-message>\n              </div>\n            </div>\n            <div class="field mb-4 col-12">\n              <label for="descricao" class="font-medium text-900">Descri\xe7\xe3o</label>\n              <textarea class="h-auto" id="descricao" pInputTextarea [autoResize]="true" [rows]="5"\n                formControlName="descricao"></textarea>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'descricao\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n            <ng-container>\n              <div class="text-900 font-medium text-xl mt-4 lg:mt-0 mb-4 px-2">Associar?</div>\n              <div class="field-radiobutton mb-4 col-12 ">\n                <p-radioButton name="associar_mode" [value]="getNoOption()" [(ngModel)]="associacao"\n                  [ngModelOptions]="{standalone: true}" inputId="nao" (onClick)="clearSuggestion()">\n                </p-radioButton>\n                <label for="nao">N\xe3o</label>\n              </div>\n              <div class="field-radiobutton mb-4 col-12 ">\n                <p-radioButton name="associar_mode" [value]="getServicoOption()" [(ngModel)]="associacao"\n                  [ngModelOptions]="{standalone: true}" inputId="servico" (onClick)="clearSuggestion()">\n                </p-radioButton>\n                <label for="servico">Servi\xe7o</label>\n              </div>\n              <div class="field-radiobutton mb-4 col-12 ">\n                <p-radioButton name="associar_mode" [value]="getProdutoOption()" [(ngModel)]="associacao"\n                  [ngModelOptions]="{standalone: true}" inputId="produto" (onClick)="clearSuggestion()"></p-radioButton>\n                <label for="produto">Produto</label>\n              </div>\n\n              <div *ngIf="servicos && associacao == \'SERVICO\'" class="col-8 lg:col-10 field mb-5">\n                <label for="servicos" class="text-900 font-medium mb-3">Servi\xe7o a ser associado</label>\n                <div class="ml-3 cursor-pointer pi pi-question-circle" (click)="detailServico()"></div>\n                <p-dropdown id="servicos" #drop_servico [options]="servicos.data" formControlName="servico"\n                  optionLabel="nome" [filter]="true" placeholder="Selecione um servi\xe7o" [virtualScroll]="true"\n                  [virtualScrollItemSize]="38" [lazy]="true" optionLabel="nome" optionValue="id"\n                  (onLazyLoad)="paginarServico($event)" (onFilter)="onServicoFilter($event)"\n                  (onFocus)="blurServico($event, drop_servico)" (onChange)="generateSuggestionValue($event)">\n                  <ng-template pTemplate="loader" let-options="options">\n                    <div class="flex align-items-center py-2 px-3" style="height: 38px">\n                      <p-skeleton [width]="options.even ? \'60%\' : \'50%\'" height="1rem"></p-skeleton>\n                    </div>\n                  </ng-template>\n                </p-dropdown>\n              </div>\n              <div *ngIf="produtos && associacao == \'PRODUTO\'" class="col-8 lg:col-10 field mb-5">\n                <label for="produtos" class="text-900 font-medium mb-3">Produto a ser associado</label>\n                <div class="ml-3 cursor-pointer pi pi-question-circle" (click)="detailProduto()"></div>\n                <p-dropdown id="produtos" #drop_produto [options]="produtos.data" formControlName="produto"\n                  optionLabel="nome" [filter]="true" placeholder="Selecione um produto" [virtualScroll]="true"\n                  [virtualScrollItemSize]="38" [lazy]="true" optionLabel="nome" optionValue="id"\n                  (onLazyLoad)="paginarProduto($event)" (onFilter)="onProdutoFilter($event)"\n                  (onFocus)="blurProduto($event, drop_produto)" (onChange)="generateSuggestionValue($event)">\n                  <ng-template pTemplate="loader" let-options="options">\n                    <div class="flex align-items-center py-2 px-3" style="height: 38px">\n                      <p-skeleton [width]="options.even ? \'60%\' : \'50%\'" height="1rem"></p-skeleton>\n                    </div>\n                  </ng-template>\n                </p-dropdown>\n              </div>\n            </ng-container>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="quantidade" class="font-medium text-900">Quantidade <span\n                  class="text-xs">(opcional)</span></label>\n              <p-inputNumber id="quantidade" formControlName="quantidade"\n                (onInput)="generateSuggestionQuantidade($event)"></p-inputNumber>\n            </div>\n            <div class="field mb-4 col-12 md:col-6">\n              <label for="custo" class="font-medium text-900">Custo <span class="text-xs">(opcional)</span> </label>\n              <p-inputNumber id="custo" formControlName="custo" mode="decimal" [minFractionDigits]="2"\n                [maxFractionDigits]="2"\n                [placeholder]="\'Custo estimado: R$ \' + suggestionedValues.custo_estimado"></p-inputNumber>\n              <div class="flex mt-1 justify-content-end">\n                <p-message severity="error" text="Obrigat\xf3rio" *ngIf="isInputError(\'custo\')"></p-message>\n              </div>\n            </div>\n            <div class="surface-border border-top-1 opacity-50 mb-4 col-12"></div>\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Atualizar" icon="pi pi-send" iconPos="right" class="w-auto" (click)="create()"\n              [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>\n\n\n<app-question-servico [showDialog]="showServicoDialog" [selectedServico]="selectedServico"\n  (closeEvent)="selectedServico = undefined; showServicoDialog = false;"></app-question-servico>\n<app-question-produto *ngIf="selectedProduto" [showDialog]="showQuestionProduto" [selectedProduto]="selectedProduto"\n  (closeEvent)="selectedProduto = undefined; showQuestionProduto = false;"></app-question-produto>',styles:[""]})],W);let X=class{constructor(e,n,s){this.itensDePlanoervice=e,this.modal=n,this.toastService=s,this.changeToPlanosMainEvent=new a.vpe,this.sortOptions=[],this.searchedItem="",this.currentPage=1,this.showQuestionProduto=!1,this.showQuestionServico=!1,this.isLoaded=!1,this.contentError=new _e.S,this.subscriptions=new B.w0}ngOnInit(){this.loaditensDePlano()}ngOnDestroy(){this.subscriptions.unsubscribe()}loaditensDePlano(e=1,n){const s=this.itensDePlanoervice.list({searchedItem:n},{order:U.L.DESC,page:e,take:5}).subscribe({next:o=>{this.itensDePlano=o,this.isLoaded=!0},error:o=>{this.contentError={code:o.status,hasError:!0}}});this.subscriptions.add(s)}changeFiltro(e){const{value:n}=e;this.loaditensDePlano()}createNew(){this.showModal(Y)}editar(e){this.showModal(W,{itemDePlano:e})}enablePlano(){this.changeToPlanosMainEvent.emit(!0)}questionProduto(e){const{produto:n}=e;n?(this.selectedProduto=n,this.showQuestionProduto=!0):this.toastService.presentToast({detalhe:"Nenhum produto associado ao item",titulo:"Aten\xe7\xe3o!",duracao:C.m4.shortDuration,gravidade:C.kl.ATENCAO})}questionServico(e){const{servico:n}=e;n?(this.selectedServico=n,this.showQuestionServico=!0):this.toastService.presentToast({detalhe:"Nenhum servi\xe7o associado ao item",titulo:"Aten\xe7\xe3o!",duracao:C.m4.shortDuration,gravidade:C.kl.ATENCAO})}search(){this.loaditensDePlano(1,this.searchedItem)}paginar(e){const{first:n,rows:s}=e,o=Number(Number(n)/Number(s)+1);o!=this.currentPage&&(this.currentPage=o,this.loaditensDePlano(o))}showModal(e,n){var s=this;return(0,le.Z)(function*(){const o=yield s.modal.create({component:e,backdropDismiss:!1,cssClass:"modal-size-80",componentProps:n});return o.onDidDismiss().then(c=>{const{data:_,role:w}=c;_&&(s.toastService.presentToast({detalhe:"Opera\xe7\xe3o bem sucedida!",titulo:"Sucesso!",duracao:C.m4.mediumDuration,gravidade:C.kl.SUCESSO}),s.loaditensDePlano(s.currentPage))}),yield o.present()})()}};X.ctorParameters=()=>[{type:z},{type:f.IN},{type:F.D}],X.propDecorators={changeToPlanosMainEvent:[{type:a.r_U}]},X=(0,t.gn)([(0,a.wA2)({selector:"app-itens-de-plano-main",template:'<br>\n<div class="card main-view">\n\n  <ng-container *ngIf="isLoaded">\n    <p-dataView emptyMessage="Nada encontrado, experimente escolher outro filtro" class="data-container" #dv\n      [lazy]="true" [value]="itensDePlano.data" [paginator]="true" [rows]="itensDePlano.meta.take"\n      [totalRecords]="itensDePlano.meta.itemCount" [pageLinks]="itensDePlano.meta.pageCount"\n      (onLazyLoad)="paginar($event)" filterBy="nome" layout="list">\n      <ng-template pTemplate="header">\n        <div class="flex flex-row justify-content-end mb-2">\n          <button pButton pRipple class="sm:w-auto w-full" icon="pi pi-plus" label="Novo" (click)="createNew()">\n          </button>\n        </div>\n\n        <div class="flex flex-column md:flex-row md:justify-content-center">\n          <span class="p-input-icon-right mb-2 md:mb-0 ">\n            <i class="pi pi-search cursor-pointer text-primary" (click)="search()"></i>\n            <input class="w-full" type="search" pInputText [(ngModel)]="searchedItem"\n              [ngModelOptions]="{standalone: true}" placeholder="Buscar " (keyup.enter)="search()">\n          </span>\n        </div>\n\n      </ng-template>\n      <ng-template let-data pTemplate="listItem">\n        <div *ngIf="isLoaded" #templateGrid class="col-12">\n          <div class="data-list-item">\n            <div class="data-list-detail">\n              <div class="data-name">{{ data.nome }}</div>\n              <div class="mt-1 mb-3">{{ data.descricao }}</div>\n              <div class="mt-1">Custo: {{ data.custo ? (data.custo | currency:\'BRL\': \'(R$)\') : (\'N\xe3o\n                estipulado\') }}</div>\n              <div class="mt-1">Quantidade: {{ data.quantidade ? (data.quantidade) : (\'N\xe3o estipulado\') }}</div>\n              <div class="mt-1">Produto Associado: {{ data.produto?.nome || \'Nenhum produto associado\' }}</div>\n              <div class="mt-1">Servi\xe7o Associado: {{ data.servico?.nome || \'Nenhum servi\xe7o associado\' }}</div>\n            </div>\n            <div class="data-list-action">\n              <p-button icon="pi pi-pencil" label="Editar" (click)="editar(data)">\n              </p-button>\n              <button pButton iconPos="right" pRipple icon="pi pi-shopping-cart" label="Produto"\n                (click)="questionProduto(data)" class="p-button p-button-outlined">\n              </button>\n              <button pButton iconPos="right" pRipple icon="pi pi-cog" label="Servi\xe7o" (click)="questionServico(data)"\n                class="p-button p-button-outlined">\n              </button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </p-dataView>\n  </ng-container>\n\n\n  <ng-container *ngIf="contentError.hasError">\n    <app-content-error [erroCode]="contentError.code"></app-content-error>\n  </ng-container>\n</div>\n\n\n<p-confirmDialog [style]="{width: \'50vw\'}" [baseZIndex]="10000" rejectButtonStyleClass="p-button-text">\n</p-confirmDialog>\n\n<app-question-servico *ngIf="selectedServico" [showDialog]="showQuestionServico" [selectedServico]="selectedServico"\n  (closeEvent)="selectedServico = undefined; showQuestionServico = false;"></app-question-servico>\n<app-question-produto *ngIf="selectedProduto" [showDialog]="showProdutoDialog" [selectedProduto]="selectedProduto"\n  (closeEvent)="selectedProduto = undefined; showProdutoDialog = false;"></app-question-produto>',styles:[""]})],X);let ee=class{constructor(e,n,s){this.modal=e,this.toastMessageService=n,this.itemDePlanoService=s,this.itens_associados=[],this.selectedItensEvent=new a.vpe,this.unselectedItensEvent=new a.vpe,this.sortOptions=[],this.searchedItem="",this.currentPage=1,this.selectAll=!1,this.selectedItens=[],this.unselectedItens=[],this.totalRecords=0,this.showDialog=!1,this.isLoaded=!1,this.subscriptions=new B.w0}ngOnInit(){this.loadItens(),this.selectedItens=this.itens_associados}ngOnDestroy(){this.subscriptions.unsubscribe()}loadItens(e=1,n){const s=this.itemDePlanoService.list({searchedItem:n},{order:U.L.DESC,page:e,take:10}).subscribe(o=>{this.itens=o,this.totalRecords=o.meta.itemCount,this.isLoaded=!0});this.subscriptions.add(s)}paginar(e){const{first:n,rows:s}=e,o=Number(Number(n)/Number(s)+1);this.currentPage=o,this.loadItens(o)}search(){this.loadItens(1,this.searchedItem)}clear(){this.searchedItem="",this.loadItens(1,this.searchedItem)}onSelectionChange(e=[]){this.selectAll=e.length===this.totalRecords,this.selectedItens=e,this.selectedItens.forEach(n=>{const s=this.unselectedItens.findIndex(o=>n.id==o.id);s>=0&&(this.unselectedItens.splice(s,1),this.emitDeselections())}),this.emitSelections()}onSelectAllChange(e){if(e.checked){const s=this.itemDePlanoService.list({},{order:U.L.DESC,page:this.currentPage,take:10}).subscribe(o=>{this.itens=o,this.selectAll=!0});this.subscriptions.add(s)}else this.selectedItens=[],this.selectAll=!1}onRowUnselect({data:e}){this.itens_associados.findIndex(s=>s.id==e.id)>=0&&!this.unselectedItens.includes(e)&&(this.unselectedItens.push(e),this.emitDeselections())}detail(e){this.selectedItem=e,this.showDialog=!0}emitSelections(){this.selectedItensEvent.emit(this.selectedItens)}emitDeselections(){this.unselectedItensEvent.emit(this.unselectedItens)}};ee.ctorParameters=()=>[{type:f.IN},{type:F.D},{type:z}],ee.propDecorators={itens_associados:[{type:a.IIB}],selectedItensEvent:[{type:a.r_U}],unselectedItensEvent:[{type:a.r_U}]},ee=(0,t.gn)([(0,a.wA2)({selector:"app-itens-de-plano-selection",template:'<div class="grid h-full w-full mx-1 my-1">\n  <p-panel header="Itens" [toggleable]="true">\n    <p-table *ngIf="itens" [value]="itens.data" [lazy]="true" [paginator]="true" [rows]="itens.meta.take"\n      [totalRecords]="itens.meta.itemCount" [pageLinks]="itens.meta.pageCount" (onLazyLoad)="paginar($event)"\n      dataKey="id" [tableStyle]="{\'min-width\': \'65rem\'}" [selection]="selectedItens"\n      (selectionChange)="onSelectionChange($event)" [selectAll]="selectAll" (onRowUnselect)="onRowUnselect($event)"\n      (selectAllChange)="onSelectAllChange($event)" [loading]="loading" [globalFilterFields]="[\'name\']">\n      <ng-template pTemplate="header">\n        <tr>\n          <th style="width: 4rem"></th>\n          <th>Nome\n          </th>\n          <th>Descri\xe7\xe3o</th>\n          <th>Detalhar</th>\n        </tr>\n        <tr>\n          <th style="width: 4rem">\n          </th>\n          <th>\n            <span class="p-input-icon-right mb-2 md:mb-0 ">\n              <i class="pi pi-search cursor-pointer text-primary" (click)="search()"></i>\n              <input type="search" pInputText [(ngModel)]="searchedItem" [ngModelOptions]="{standalone: true}"\n                placeholder="Buscar" (keyup.enter)="search()">\n            </span>\n            <button pButton pRipple type="button" label="Limpar" class="mt-1 p-button-rounded p-button"\n              (click)="clear()"></button>\n          </th>\n          <th></th>\n          <th></th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-i>\n        <tr>\n          <td>\n            <p-tableCheckbox [value]="i"></p-tableCheckbox>\n          </td>\n          <td>{{i.nome}}</td>\n          <td>{{i.descricao}}</td>\n          <td>\n            <p-button icon="pi pi-search" (click)="detail(i)">\n            </p-button>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </p-panel>\n</div>\n\n\n<app-question-item-plano [showDialog]="showDialog" [selectedItemDePlano]="selectedItem"\n(closeEvent)="selectedServico = undefined; showDialog = false;"></app-question-item-plano>',styles:[""]})],ee);var fe=i(91795);let te=class{constructor(e){this.itemDePlanoService=e,this.showDialog=!1,this.closeEvent=new a.vpe,this.subscriptions=new B.w0}ngOnInit(){this.selectedItemDePlano?this.showDialog=!0:this.loadItemDePlano()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadItemDePlano(){if(!this.selectedItemDePlano&&!this.item_plano_id)return void this.close();const e=this.itemDePlanoService.findById(this.item_plano_id).subscribe(n=>{this.selectedItemDePlano=n,this.showDialog=!0});this.subscriptions.add(e)}close(){this.showDialog=!1,this.closeEvent.emit(this.showDialog)}};te.ctorParameters=()=>[{type:z}],te.propDecorators={showDialog:[{type:a.IIB}],selectedItemDePlano:[{type:a.IIB}],item_plano_id:[{type:a.IIB}],closeEvent:[{type:a.r_U}]},te=(0,t.gn)([(0,a.wA2)({selector:"app-question-item-plano",template:'<p-dialog *ngIf="selectedItemDePlano" [(visible)]="showDialog" [modal]="true" [closable]="false"\n  [breakpoints]="{\'960px\': \'75vw\', \'640px\': \'100vw\'}" [style]="{width: \'40vw\'}" [draggable]="false">\n  <ng-template pTemplate="header">\n    <div class="flex align-items-center">\n      <span class="flex align-items-center justify-content-center bg-cyan-100 text-cyan-800 mr-3 border-circle"\n        style="width:32px;height:32px">\n        <i class="pi pi-info text-lg"></i>\n      </span>\n      <span class="font-medium text-2xl text-900">{{ selectedItemDePlano.nome }}</span>\n    </div>\n  </ng-template>\n  <div class="grid">\n    <div class="col-12 line-height-3 p-0 m-1">\n      {{ selectedItemDePlano.descricao }}\n    </div>\n    <div class="col-12 border-top-1 surface-border pt-3  mt-2"></div>\n    <div class="col-12 lg:col-6 p-3 text-center">\n      <div class="shadow-2 surface-card p-3" style="border-radius: 12px">\n        <div class="flex align-items-center justify-content-between">\n          <div>\n            <span class="text-xl text-900 font-bold">{{ selectedItemDePlano.custo ? (selectedItemDePlano.custo\n              | currency:\'BRL\': \'(R$)\') : (\'N\xe3o\n              estipulado\') }}</span>\n            <p class="mt-2 mb-0 text-600 text-lg">Custo estimado do item</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="col-12 lg:col-6 p-3 text-center">\n      <div class="shadow-2 surface-card p-3" style="border-radius: 12px">\n        <div class="flex align-items-center justify-content-between">\n          <div>\n            <span class="text-xl text-900 font-bold">{{ selectedItemDePlano.quantidade ?\n              (selectedItemDePlano.quantidade) : (\'N\xe3o\n              estipulado\') }}</span>\n            <p class="mt-2 mb-0 text-600 text-lg">Quantidade de item</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template pTemplate="footer">\n    <button pButton pRipple icon="pi pi-check" (click)="close()" label="OK"></button>\n  </ng-template>\n</p-dialog>',styles:[""]})],te);let pe=class{};pe=(0,t.gn)([(0,a.LVF)({declarations:[te],imports:[P.ez,f.Pc,de.S,m.hJ,fe.T],exports:[te]})],pe);var at=i(52681);let ne=class{constructor(e){this.produtoService=e,this.showDialog=!1,this.closeEvent=new a.vpe,this.subscriptions=new B.w0}ngOnInit(){this.selectedProduto?this.showDialog=!0:this.loadProduto()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadProduto(){if(!this.selectedProduto&&!this.produto_id)return void this.close();const e=this.produtoService.findById(this.produto_id).subscribe(n=>{this.selectedProduto=n,this.showDialog=!0});this.subscriptions.add(e)}close(){this.showDialog=!1,this.closeEvent.emit(this.showDialog)}};ne.ctorParameters=()=>[{type:Q.m}],ne.propDecorators={showDialog:[{type:a.IIB}],selectedProduto:[{type:a.IIB}],produto_id:[{type:a.IIB}],closeEvent:[{type:a.r_U}]},ne=(0,t.gn)([(0,a.wA2)({selector:"app-question-produto",template:'<p-dialog *ngIf="selectedProduto" [(visible)]="showDialog" appendTo="body" [modal]="true" [closable]="false"\n  [breakpoints]="{\'960px\': \'75vw\', \'640px\': \'100vw\'}" [style]="{width: \'40vw\'}" [draggable]="false">\n  <ng-template pTemplate="header">\n    <div class="flex align-items-center">\n      <span class="flex align-items-center justify-content-center bg-cyan-100 text-cyan-800 mr-3 border-circle"\n        style="width:32px;height:32px">\n        <i class="pi pi-info text-lg"></i>\n      </span>\n      <span class="font-medium text-2xl text-900">{{ selectedProduto.nome }}</span>\n    </div>\n  </ng-template>\n  <div class="grid">\n    <div class="col-12 line-height-3 p-0 m-1">\n      {{ selectedProduto.descricao }}\n      <div class="mt-1" *ngIf="selectedProduto?.estoques">\n        <div *ngFor="let e of selectedProduto.estoques">\n          <span>{{e.quantidade}} unidades dispon\xedves na loja {{ e.loja.codigo }} - {{ e.loja.nome }}</span>\n        </div>\n      </div>\n    </div>\n    <div class="col-12 border-top-1 surface-border pt-3  mt-2"></div>\n    <div class="col-12 lg:col-6 p-3 text-center">\n      <div class="shadow-2 surface-card p-3" style="border-radius: 12px">\n        <div class="flex align-items-center justify-content-between">\n          <div>\n            <span class="text-xl text-900 font-bold">R$ {{ selectedProduto.preco_compra | currency:\'BRL\': \'\'\n              }}</span>\n            <p class="mt-2 mb-0 text-600 text-lg">Pre\xe7o de compra do produto</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="col-12 lg:col-6 p-3 text-center">\n      <div class="shadow-2 surface-card p-3" style="border-radius: 12px">\n        <div class="flex align-items-center justify-content-between">\n          <div>\n            <span class="text-xl text-900 font-bold">R$ {{ selectedProduto.preco_venda | currency:\'BRL\': \'\'\n              }}</span>\n            <p class="mt-2 mb-0 text-600 text-lg">Pre\xe7o de venda do produto</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template pTemplate="footer">\n    <button pButton pRipple icon="pi pi-check" (click)="close()" label="OK"></button>\n  </ng-template>\n</p-dialog>',styles:[""]})],ne);let me=class{};me=(0,t.gn)([(0,a.LVF)({declarations:[ne],imports:[P.ez,f.Pc,de.S,m.hJ,fe.T],exports:[ne]})],me);var ct=i(32506);let ge=class{};ge=(0,t.gn)([(0,a.LVF)({declarations:[oe,ie,j,H,re,$,Z,G,K,J,Y,W,X,ee],imports:[P.ez,l.u5,l.UX,f.Pc,O.FI,p.Q,g.kW,u.LU,V.U$,Pe.O,r.j,A.Iu,Ie.nD,ye.A,E.cc,m.hJ,D.O,h.q,I.gz,T.zz,A.Iu,be.L$,de.S,xe.D,he.o,Oe.O,pe,at.y,me,ct.X],exports:[oe,ie,j,H,re,$,Z,G,K,J,Y,W,X,ee]})],ge);let ve=class{};ve=(0,t.gn)([(0,a.LVF)({imports:[P.ez,l.u5,S.uH,f.Pc,M,ge,he.o],declarations:[x]})],ve)},52681:(q,R,i)=>{i.d(R,{y:()=>O});var t=i(70655),a=i(98274),P=i(36895),l=i(48058),f=i(21493),S=i(35593),v=i(91795);var x=i(7475),b=i(50727);let M=class{constructor(r){this.servicosService=r,this.showDialog=!1,this.closeEvent=new a.vpe,this.subscriptions=new b.w0}ngOnInit(){this.selectedServico?this.showDialog=!0:this.loadServico()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadServico(){if(!this.selectedServico&&!this.servico_id)return void this.close();const r=this.servicosService.findById(this.servico_id).subscribe(E=>{this.selectedServico=E,this.showDialog=!0});this.subscriptions.add(r)}close(){this.showDialog=!1,this.closeEvent.emit(this.showDialog)}};M.ctorParameters=()=>[{type:x.B}],M.propDecorators={showDialog:[{type:a.IIB}],selectedServico:[{type:a.IIB}],servico_id:[{type:a.IIB}],closeEvent:[{type:a.r_U}]},M=(0,t.gn)([(0,a.wA2)({selector:"app-question-servico",template:'\n\n<p-dialog *ngIf="selectedServico" [(visible)]="showDialog" appendTo="body" [modal]="true"  [closable]="false"\n[breakpoints]="{\'960px\': \'75vw\', \'640px\': \'100vw\'}" [style]="{width: \'40vw\'}" [draggable]="false">\n<ng-template pTemplate="header">\n  <div class="flex align-items-center">\n    <span class="flex align-items-center justify-content-center bg-cyan-100 text-cyan-800 mr-3 border-circle"\n      style="width:32px;height:32px">\n      <i class="pi pi-info text-lg"></i>\n    </span>\n    <span class="font-medium text-2xl text-900">{{ selectedServico.nome }}</span>\n  </div>\n</ng-template>\n<div class="grid">\n  <div class="col-12 line-height-3 p-0 m-1">\n    {{ selectedServico.descricao }}\n    <div class="mt-1">Pode ser realizado de maneira remota: {{ selectedServico.is_remoto ? \'Sim\': \'N\xe3o\' }}</div>\n    <div>Pode ser realizado \xe0 domic\xedlio: {{ selectedServico.is_domicilio ? \'Sim\': \'N\xe3o\' }}</div>\n  </div>\n  <div class="col-12 border-top-1 surface-border pt-3  mt-2"></div>\n  <div class="col-12 lg:col-6 p-3 text-center">\n    <div class="shadow-2 surface-card p-3" style="border-radius: 12px">\n      <div class="flex align-items-center justify-content-between">\n        <div>\n          <span class="text-xl text-900 font-bold">R$ {{ selectedServico.custo_servico | currency:\'BRL\': \'\'\n            }}</span>\n          <p class="mt-2 mb-0 text-600 text-lg">Custo tabelado do servi\xe7o</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="col-12 lg:col-6 p-3 text-center">\n    <div class="shadow-2 surface-card p-3" style="border-radius: 12px">\n      <div class="flex align-items-center justify-content-between">\n        <div>\n          <span class="text-xl text-900 font-bold">R$ {{ selectedServico.preco_servico | currency:\'BRL\': \'\'\n            }}</span>\n          <p class="mt-2 mb-0 text-600 text-lg">Valor tabelado a ser cobrado</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template pTemplate="footer">\n  <button pButton pRipple icon="pi pi-check" (click)="close()"\n    label="OK"></button>\n</ng-template>\n</p-dialog>',styles:[""]})],M);let O=class{};O=(0,t.gn)([(0,a.LVF)({declarations:[M],imports:[P.ez,l.Pc,f.S,S.hJ,v.T],exports:[M]})],O)},42732:(q,R,i)=>{i.d(R,{w:()=>v});var t=i(70655),a=i(80529),P=i(98274),l=i(40199),f=i(55583),S=i(99038);let v=class{constructor(d){this.http=d}list(d,x=new l.k){let b=f.t.getPageOptionsParams(x);return d&&d.nome&&(b=b.append("nome",d.nome)),d&&d.descricao&&(b=b.append("descricao",d.descricao)),d&&d.searchedPlano&&(b=b.append("searchedPlano",d.searchedPlano)),d&&d.created_at&&(b=b.append("created_at",d.created_at.toDateString())),this.http.get(`${S.Hz.baseURL}/planos`,{responseType:"json",params:b})}findById(d){return this.http.get(`${S.Hz.baseURL}/planos/${d}`,{responseType:"json"})}create(d){return this.http.post(`${S.Hz.baseURL}/planos`,d,{responseType:"json"})}update(d,x){return this.http.put(`${S.Hz.baseURL}/planos/${d}`,x,{responseType:"json"})}};v.ctorParameters=()=>[{type:a.eN}],v=(0,t.gn)([(0,P.GSi)({providedIn:"root"})],v)},7475:(q,R,i)=>{i.d(R,{B:()=>v});var t=i(70655),a=i(80529),P=i(98274),l=i(99038),f=i(40199),S=i(55583);let v=class{constructor(d){this.http=d}create(d){return this.http.post(`${l.Hz.baseURL}/servicos`,d,{responseType:"json"})}update(d,x){return this.http.put(`${l.Hz.baseURL}/servicos/${d}`,x,{responseType:"json"})}list(d,x=new f.k){let b=S.t.getPageOptionsParams(x);return d&&d.searchedServico&&(b=b.append("searchedServico",d.searchedServico)),d&&d.nome&&(b=b.append("nome",d.nome)),d&&d.descricao&&(b=b.append("descricao",d.descricao)),this.http.get(`${l.Hz.baseURL}/servicos`,{responseType:"json",params:b})}listBasic(){return this.http.get(`${l.Hz.baseURL}/servicos/basic/list`,{responseType:"json"})}findById(d){return this.http.get(`${l.Hz.baseURL}/servicos/${d}`,{responseType:"json"})}};v.ctorParameters=()=>[{type:a.eN}],v=(0,t.gn)([(0,P.GSi)({providedIn:"root"})],v)},61989:(q,R,i)=>{i.d(R,{nD:()=>M});var t=i(98274),a=i(36895),P=i(24006),l=i(60982);const f=["cb"],S=function(O,p,r){return{"p-checkbox-label":!0,"p-checkbox-label-active":O,"p-disabled":p,"p-checkbox-label-focus":r}};function v(O,p){if(1&O){const r=t.EpF();t.TgZ(0,"label",7),t.NdJ("click",function(m){t.CHM(r);const g=t.oxw(),u=t.MAs(3);return t.KtG(g.onClick(m,u,!0))}),t._uU(1),t.qZA()}if(2&O){const r=t.oxw();t.Tol(r.labelStyleClass),t.Q6J("ngClass",t.kEZ(5,S,r.checked(),r.disabled,r.focused)),t.uIk("for",r.inputId),t.xp6(1),t.Oqu(r.label)}}const k=function(O,p,r){return{"p-checkbox p-component":!0,"p-checkbox-checked":O,"p-checkbox-disabled":p,"p-checkbox-focused":r}},d=function(O,p,r){return{"p-highlight":O,"p-disabled":p,"p-focus":r}},x={provide:P.JU,useExisting:(0,t.Gpc)(()=>b),multi:!0};class b{constructor(p){this.cd=p,this.checkboxIcon="pi pi-check",this.trueValue=!0,this.falseValue=!1,this.onChange=new t.vpe,this.onModelChange=()=>{},this.onModelTouched=()=>{},this.focused=!1}onClick(p,r,E){p.preventDefault(),!this.disabled&&!this.readonly&&(this.updateModel(p),E&&r.focus())}updateModel(p){let r;this.binary?(r=this.checked()?this.falseValue:this.trueValue,this.model=r,this.onModelChange(r)):(r=this.checked()?this.model.filter(E=>!l.gb.equals(E,this.value)):this.model?[...this.model,this.value]:[this.value],this.onModelChange(r),this.model=r,this.formControl&&this.formControl.setValue(r)),this.onChange.emit({checked:r,originalEvent:p})}handleChange(p){this.readonly||this.updateModel(p)}onFocus(){this.focused=!0}onBlur(){this.focused=!1,this.onModelTouched()}focus(){this.inputViewChild.nativeElement.focus()}writeValue(p){this.model=p,this.cd.markForCheck()}registerOnChange(p){this.onModelChange=p}registerOnTouched(p){this.onModelTouched=p}setDisabledState(p){this.disabled=p,this.cd.markForCheck()}checked(){return this.binary?this.model===this.trueValue:l.gb.contains(this.value,this.model)}}b.\u0275fac=function(p){return new(p||b)(t.Y36(t.sBO))},b.\u0275cmp=t.Xpm({type:b,selectors:[["p-checkbox"]],viewQuery:function(p,r){if(1&p&&t.Gf(f,5),2&p){let E;t.iGM(E=t.CRH())&&(r.inputViewChild=E.first)}},hostAttrs:[1,"p-element"],inputs:{value:"value",name:"name",disabled:"disabled",binary:"binary",label:"label",ariaLabelledBy:"ariaLabelledBy",ariaLabel:"ariaLabel",tabindex:"tabindex",inputId:"inputId",style:"style",styleClass:"styleClass",labelStyleClass:"labelStyleClass",formControl:"formControl",checkboxIcon:"checkboxIcon",readonly:"readonly",required:"required",trueValue:"trueValue",falseValue:"falseValue"},outputs:{onChange:"onChange"},features:[t._Bn([x])],decls:7,vars:26,consts:[[3,"ngStyle","ngClass"],[1,"p-hidden-accessible"],["type","checkbox",3,"readonly","value","checked","disabled","focus","blur","change"],["cb",""],[1,"p-checkbox-box",3,"ngClass","click"],[1,"p-checkbox-icon",3,"ngClass"],[3,"class","ngClass","click",4,"ngIf"],[3,"ngClass","click"]],template:function(p,r){if(1&p){const E=t.EpF();t.TgZ(0,"div",0)(1,"div",1)(2,"input",2,3),t.NdJ("focus",function(){return r.onFocus()})("blur",function(){return r.onBlur()})("change",function(g){return r.handleChange(g)}),t.qZA()(),t.TgZ(4,"div",4),t.NdJ("click",function(g){t.CHM(E);const u=t.MAs(3);return t.KtG(r.onClick(g,u,!0))}),t._UZ(5,"span",5),t.qZA()(),t.YNc(6,v,2,9,"label",6)}2&p&&(t.Tol(r.styleClass),t.Q6J("ngStyle",r.style)("ngClass",t.kEZ(18,k,r.checked(),r.disabled,r.focused)),t.xp6(2),t.Q6J("readonly",r.readonly)("value",r.value)("checked",r.checked())("disabled",r.disabled),t.uIk("id",r.inputId)("name",r.name)("tabindex",r.tabindex)("aria-labelledby",r.ariaLabelledBy)("aria-label",r.ariaLabel)("aria-checked",r.checked())("required",r.required),t.xp6(2),t.Q6J("ngClass",t.kEZ(22,d,r.checked(),r.disabled,r.focused)),t.xp6(1),t.Q6J("ngClass",r.checked()?r.checkboxIcon:null),t.xp6(1),t.Q6J("ngIf",r.label))},dependencies:[a.mk,a.O5,a.PC],styles:[".p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}\n"],encapsulation:2,changeDetection:0});class M{}M.\u0275fac=function(p){return new(p||M)},M.\u0275mod=t.oAB({type:M,declarations:[b],imports:[a.ez],exports:[b]}),M.\u0275inj=t.cJS({imports:[a.ez]})},63054:(q,R,i)=>{i.d(R,{A:()=>f});var t=i(98274),a=i(36895),P=i(24006);class l{constructor(v,k,d,x){this.el=v,this.ngModel=k,this.control=d,this.cd=x,this.onResize=new t.vpe}ngOnInit(){this.ngModel&&(this.ngModelSubscription=this.ngModel.valueChanges.subscribe(()=>{this.updateState()})),this.control&&(this.ngControlSubscription=this.control.valueChanges.subscribe(()=>{this.updateState()}))}ngAfterViewInit(){this.autoResize&&this.resize(),this.updateFilledState(),this.cd.detectChanges()}onInput(v){this.updateState()}updateFilledState(){this.filled=this.el.nativeElement.value&&this.el.nativeElement.value.length}onFocus(v){this.autoResize&&this.resize(v)}onBlur(v){this.autoResize&&this.resize(v)}resize(v){this.el.nativeElement.style.height="auto",this.el.nativeElement.style.height=this.el.nativeElement.scrollHeight+"px",parseFloat(this.el.nativeElement.style.height)>=parseFloat(this.el.nativeElement.style.maxHeight)?(this.el.nativeElement.style.overflowY="scroll",this.el.nativeElement.style.height=this.el.nativeElement.style.maxHeight):this.el.nativeElement.style.overflow="hidden",this.onResize.emit(v||{})}updateState(){this.updateFilledState(),this.autoResize&&this.resize()}ngOnDestroy(){this.ngModelSubscription&&this.ngModelSubscription.unsubscribe(),this.ngControlSubscription&&this.ngControlSubscription.unsubscribe()}}l.\u0275fac=function(v){return new(v||l)(t.Y36(t.SBq),t.Y36(P.On,8),t.Y36(P.a5,8),t.Y36(t.sBO))},l.\u0275dir=t.lG2({type:l,selectors:[["","pInputTextarea",""]],hostAttrs:[1,"p-inputtextarea","p-inputtext","p-component","p-element"],hostVars:4,hostBindings:function(v,k){1&v&&t.NdJ("input",function(x){return k.onInput(x)})("focus",function(x){return k.onFocus(x)})("blur",function(x){return k.onBlur(x)}),2&v&&t.ekj("p-filled",k.filled)("p-inputtextarea-resizable",k.autoResize)},inputs:{autoResize:"autoResize"},outputs:{onResize:"onResize"}});class f{}f.\u0275fac=function(v){return new(v||f)},f.\u0275mod=t.oAB({type:f,declarations:[l],imports:[a.ez],exports:[l]}),f.\u0275inj=t.cJS({imports:[a.ez]})},1236:(q,R,i)=>{i.d(R,{q:()=>E});var t=i(98274),a=i(36895),P=i(39528),l=i(3608);function f(m,g){if(1&m&&(t.TgZ(0,"span",11),t._uU(1),t.qZA()),2&m){const u=t.oxw(2).$implicit;t.xp6(1),t.Oqu(u.label)}}function S(m,g){if(1&m&&t._UZ(0,"span",12),2&m){const u=t.oxw(2).$implicit;t.Q6J("innerHTML",u.label,t.oJD)}}const v=function(){return{exact:!1}};function k(m,g){if(1&m){const u=t.EpF();t.TgZ(0,"a",7),t.NdJ("click",function(h){t.CHM(u);const I=t.oxw(),T=I.$implicit,A=I.index,V=t.oxw();return t.KtG(V.itemClick(h,T,A))})("keydown.enter",function(h){t.CHM(u);const I=t.oxw(),T=I.$implicit,A=I.index,V=t.oxw();return t.KtG(V.itemClick(h,T,A))}),t.TgZ(1,"span",8),t._uU(2),t.qZA(),t.YNc(3,f,2,1,"span",9),t.YNc(4,S,1,1,"ng-template",null,10,t.W1O),t.qZA()}if(2&m){const u=t.MAs(5),D=t.oxw(),h=D.$implicit,I=D.index,T=t.oxw();t.Q6J("routerLink",h.routerLink)("queryParams",h.queryParams)("routerLinkActive","p-menuitem-link-active")("routerLinkActiveOptions",h.routerLinkActiveOptions||t.DdM(16,v))("target",h.target)("fragment",h.fragment)("queryParamsHandling",h.queryParamsHandling)("preserveFragment",h.preserveFragment)("skipLocationChange",h.skipLocationChange)("replaceUrl",h.replaceUrl)("state",h.state),t.uIk("id",h.id)("tabindex",h.disabled||T.readonly?null:h.tabindex?h.tabindex:"0"),t.xp6(2),t.Oqu(I+1),t.xp6(1),t.Q6J("ngIf",!1!==h.escape)("ngIfElse",u)}}function d(m,g){if(1&m&&(t.TgZ(0,"span",11),t._uU(1),t.qZA()),2&m){const u=t.oxw(2).$implicit;t.xp6(1),t.Oqu(u.label)}}function x(m,g){if(1&m&&t._UZ(0,"span",12),2&m){const u=t.oxw(2).$implicit;t.Q6J("innerHTML",u.label,t.oJD)}}function b(m,g){if(1&m){const u=t.EpF();t.TgZ(0,"a",13),t.NdJ("click",function(h){t.CHM(u);const I=t.oxw(),T=I.$implicit,A=I.index,V=t.oxw();return t.KtG(V.itemClick(h,T,A))})("keydown.enter",function(h){t.CHM(u);const I=t.oxw(),T=I.$implicit,A=I.index,V=t.oxw();return t.KtG(V.itemClick(h,T,A))}),t.TgZ(1,"span",8),t._uU(2),t.qZA(),t.YNc(3,d,2,1,"span",9),t.YNc(4,x,1,1,"ng-template",null,14,t.W1O),t.qZA()}if(2&m){const u=t.MAs(5),D=t.oxw(),h=D.$implicit,I=D.index,T=t.oxw();t.Q6J("target",h.target),t.uIk("href",h.url,t.LSH)("id",h.id)("tabindex",h.disabled||I!==T.activeIndex&&T.readonly?null:h.tabindex?h.tabindex:"0"),t.xp6(2),t.Oqu(I+1),t.xp6(1),t.Q6J("ngIf",!1!==h.escape)("ngIfElse",u)}}const M=function(m,g){return{"p-highlight p-steps-current":m,"p-disabled":g}};function O(m,g){if(1&m&&(t.TgZ(0,"li",3,4),t.YNc(2,k,6,17,"a",5),t.YNc(3,b,6,7,"ng-template",null,6,t.W1O),t.qZA()),2&m){const u=g.$implicit,D=g.index,h=t.MAs(4),I=t.oxw();t.Tol(u.styleClass),t.Q6J("ngStyle",u.style)("tooltipOptions",u.tooltipOptions)("ngClass",t.WLB(9,M,I.isActive(u,D),u.disabled||I.readonly&&!I.isActive(u,D))),t.uIk("aria-selected",D===I.activeIndex)("aria-expanded",D===I.activeIndex),t.xp6(2),t.Q6J("ngIf",I.isClickableRouterLink(u))("ngIfElse",h)}}const p=function(m){return{"p-steps p-component":!0,"p-readonly":m}};class r{constructor(g,u,D){this.router=g,this.route=u,this.cd=D,this.activeIndex=0,this.readonly=!0,this.activeIndexChange=new t.vpe}ngOnInit(){this.subscription=this.router.events.subscribe(()=>this.cd.markForCheck())}itemClick(g,u,D){this.readonly||u.disabled?g.preventDefault():(this.activeIndexChange.emit(D),!u.url&&!u.routerLink&&g.preventDefault(),u.command&&u.command({originalEvent:g,item:u,index:D}))}isClickableRouterLink(g){return g.routerLink&&!this.readonly&&!g.disabled}isActive(g,u){if(g.routerLink){let D=Array.isArray(g.routerLink)?g.routerLink:[g.routerLink];return this.router.isActive(this.router.createUrlTree(D,{relativeTo:this.route}).toString(),!1)}return u===this.activeIndex}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}r.\u0275fac=function(g){return new(g||r)(t.Y36(P.F0),t.Y36(P.gz),t.Y36(t.sBO))},r.\u0275cmp=t.Xpm({type:r,selectors:[["p-steps"]],hostAttrs:[1,"p-element"],inputs:{activeIndex:"activeIndex",model:"model",readonly:"readonly",style:"style",styleClass:"styleClass"},outputs:{activeIndexChange:"activeIndexChange"},decls:3,vars:7,consts:[[3,"ngClass","ngStyle"],["role","tablist"],["class","p-steps-item","role","tab","pTooltip","",3,"ngStyle","class","tooltipOptions","ngClass",4,"ngFor","ngForOf"],["role","tab","pTooltip","",1,"p-steps-item",3,"ngStyle","tooltipOptions","ngClass"],["menuitem",""],["role","presentation","class","p-menuitem-link",3,"routerLink","queryParams","routerLinkActive","routerLinkActiveOptions","target","fragment","queryParamsHandling","preserveFragment","skipLocationChange","replaceUrl","state","click","keydown.enter",4,"ngIf","ngIfElse"],["elseBlock",""],["role","presentation",1,"p-menuitem-link",3,"routerLink","queryParams","routerLinkActive","routerLinkActiveOptions","target","fragment","queryParamsHandling","preserveFragment","skipLocationChange","replaceUrl","state","click","keydown.enter"],[1,"p-steps-number"],["class","p-steps-title",4,"ngIf","ngIfElse"],["htmlLabel",""],[1,"p-steps-title"],[1,"p-steps-title",3,"innerHTML"],["role","presentation",1,"p-menuitem-link",3,"target","click","keydown.enter"],["htmlRouteLabel",""]],template:function(g,u){1&g&&(t.TgZ(0,"div",0)(1,"ul",1),t.YNc(2,O,5,12,"li",2),t.qZA()()),2&g&&(t.Tol(u.styleClass),t.Q6J("ngClass",t.VKq(5,p,u.readonly))("ngStyle",u.style),t.xp6(2),t.Q6J("ngForOf",u.model))},dependencies:[a.mk,a.sg,a.O5,a.PC,P.yS,P.Od,l.u],styles:[".p-steps{position:relative}.p-steps ul{padding:0;margin:0;list-style-type:none;display:flex}.p-steps-item{position:relative;display:flex;justify-content:center;flex:1 1 auto}.p-steps-item .p-menuitem-link{display:inline-flex;flex-direction:column;align-items:center;overflow:hidden;text-decoration:none}.p-steps.p-steps-readonly .p-steps-item{cursor:auto}.p-steps-item.p-steps-current .p-menuitem-link{cursor:default}.p-steps-title{white-space:nowrap}.p-steps-number{display:flex;align-items:center;justify-content:center}.p-steps-title{display:block}\n"],encapsulation:2,changeDetection:0});class E{}E.\u0275fac=function(g){return new(g||E)},E.\u0275mod=t.oAB({type:E,declarations:[r],imports:[a.ez,P.Bz,l.z],exports:[r,P.Bz,l.z]}),E.\u0275inj=t.cJS({imports:[a.ez,P.Bz,l.z,P.Bz,l.z]})}}]);