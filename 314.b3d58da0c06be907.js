"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[314],{60314:(q,P,e)=>{e.r(P),e.d(P,{PlanoAssinaturasPageModule:()=>C});var r=e(70655),i=e(98274),S=e(36895),o=e(24006),f=e(48058),y=e(39528);let d=class{constructor(){}ngOnInit(){}};d.ctorParameters=()=>[],d=(0,r.gn)([(0,i.wA2)({selector:"app-plano-assinaturas",template:'<ion-header [translucent]="true">\n  <ion-toolbar>\n    <ion-buttons slot="start">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Planos de assinatura</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content appScrollTheme>\n  <app-assinaturas-main></app-assinaturas-main>\n</ion-content>\n',styles:[""]})],d);const T=[{path:"",component:d}];let g=class{};g=(0,r.gn)([(0,i.LVF)({imports:[y.Bz.forChild(T)],exports:[y.Bz]})],g);var I=e(85226),w=e(35593),O=e(91795),N=e(17913),D=e(50613),E=e(51740),z=e(1997);var A=e(50727),v=e(59136),V=e(59256),U=e(93922),G=e(2435),b=e(16137),X=e(18109),Y=e(34758),h=e(60874);let l=class{constructor(a,t,n,s,m,u){this.formBuilder=a,this.modal=t,this.assinaturaService=n,this.toastService=s,this.userService=m,this.cartaoClientesService=u,this.isLoaded=!1,this.searchedCliente="",this.selectedClienteId="",this.formasPagamento=b.q,this.enableCartaoView=!1,this.modalidadesPagamento=[],this.createdAssinaturaItemId="",this.wasCreated=!1,this.subscriptions=new A.w0}ngOnInit(){this.form=this.formBuilder.group({assinante_id:[,[o.kI.required]],forma_pagamento:[,[o.kI.required]],modalidade:[,[o.kI.required]],cartao_cliente_id:[,[]]}),this.loadClients(),this.generateModalidade()}ngOnDestroy(){this.subscriptions.unsubscribe()}create(){const a=this.form.get("assinante_id").value,t=this.form.get("forma_pagamento").value,n=this.form.get("modalidade").value,s=this.form.get("cartao_cliente_id").value||void 0,u={modalidade:n,plano_assinatura_id:this.plano.id,assinante_id:a,forma_pagamento:{tipo:t,cartao_cliente_id:s||void 0}},$=this.assinaturaService.create(u).subscribe(W=>{this.createdAssinaturaItemId=W.id,this.wasCreated=!0,this.fechar()});this.subscriptions.add($)}loadClients(a=1){const t=this.userService.listUsers({searchedUser:this.searchedCliente,tipo_usuario:X.X.CLIENTE,load_cliente_nao_identificado:!1},{order:v.L.DESC,page:a,take:10}).subscribe(n=>{this.clients=n});this.subscriptions.add(t)}paginarClient(a){this.loadClients()}onClientFilter(a){const t=a.filter;this.searchedCliente=t}blurClient(a,t){this.searchedCliente=void 0,t.filterValue=void 0}onChangeClient({value:a}){this.selectedClienteId=a,this.enableCartaoView=!1,this.form.get("forma_pagamento").setValue(void 0),this.form.get("forma_pagamento").updateValueAndValidity({onlySelf:!0}),this.form.get("cartao_cliente_id").setValue(void 0),this.form.get("cartao_cliente_id").clearValidators(),this.form.get("cartao_cliente_id").updateValueAndValidity({onlySelf:!0}),this.form.updateValueAndValidity()}get assinanteId(){return!!this.form.get("assinante_id").value}enableCartaoCliente({value:a}){const t=a;t==b.t.CARTAO_CREDITO||t==b.t.CARTAO_DEBITO?(this.enableCartaoView=!0,this.form.get("cartao_cliente_id").setValidators([o.kI.required])):(this.enableCartaoView=!1,this.form.get("cartao_cliente_id").setValue(void 0),this.form.get("cartao_cliente_id").clearValidators()),this.form.get("cartao_cliente_id").updateValueAndValidity({onlySelf:!0}),this.form.updateValueAndValidity()}loadCartao(a=1){const t=this.cartaoClientesService.list({cliente_id:this.selectedClienteId},{order:v.L.DESC,page:a,take:10}).subscribe(n=>{this.cartoes=n});this.subscriptions.add(t)}paginarCartao(a){this.loadCartao()}onCartaoFilter(a){const t=a.filter;this.searchedCliente=t}blurCartao(a,t){this.searchedCliente=void 0,t.filterValue=void 0}cadastrarCartao(){}generateModalidade(){const{valor_mensal:a,valor_trimestral:t,valor_semestral:n,valor_anual:s}=this.plano;this.modalidadesPagamento.push({modalidade:h._.MENSAL,label:`Mensal - R$ ${Number(a).toFixed(2)}`}),t&&this.modalidadesPagamento.push({modalidade:h._.TRIMESTRAL,label:`Trimestral - R$ ${Number(t).toFixed(2)}`}),n&&this.modalidadesPagamento.push({modalidade:h._.SEMESTRAL,label:`Semestral - R$ ${Number(n).toFixed(2)}`}),s&&this.modalidadesPagamento.push({modalidade:h._.ANUAL,label:`Anual - R$ ${Number(s).toFixed(2)}`})}fechar(){this.modal.dismiss(this.wasCreated)}isInputError(a){return!(this.form.controls[a].untouched||!this.form.controls[a].errors)}disableCreateBtn(){return!this.form.valid}};l.ctorParameters=()=>[{type:o.QS},{type:f.IN},{type:U.d},{type:V.D},{type:Y.K},{type:G.q}],l.propDecorators={plano:[{type:i.IIB}]},l=(0,r.gn)([(0,i.wA2)({selector:"app-assinaturas-cadastro",template:'<ion-content appScrollTheme>\n  <ng-container *ngIf="form">\n    <form [formGroup]="form" (ngSubmit)="$event.preventDefault()">\n\n      <div class="surface-ground px-4 py-8 md:px-6 lg:px-8">\n        <div class="text-900 font-medium text-xl mb-3">Criar/Cadastrar</div>\n        <div class="surface-card p-4 shadow-2 border-round p-fluid">\n          <div class="grid formgrid p-fluid">\n\n            <div *ngIf="clients" class="col-12 field mb-5">\n              <label for="clients" class="text-900 font-medium mb-3">Cliente</label>\n              <p-dropdown id="clients" #drop_client [options]="clients.data" formControlName="assinante_id"\n                optionLabel="nome" [filter]="true" placeholder="Selecione um cliente" optionValue="id"\n                [virtualScroll]="true" [virtualScrollItemSize]="38" [lazy]="true"\n                (onLazyLoad)="paginarClient($event)" (onFilter)="onClientFilter($event)"\n                (onFocus)="blurClient($event, drop_client)" (onChange)="onChangeClient($event)">\n                <ng-template pTemplate="loader" let-options="options">\n                  <div class="flex align-items-center py-2 px-3" style="height: 38px">\n                    <p-skeleton [width]="options.even ? \'60%\' : \'50%\'" height="1rem"></p-skeleton>\n                  </div>\n                </ng-template>\n              </p-dropdown>\n            </div>\n            <p-divider class="w-full px-2 mb-3"></p-divider>\n\n            <div *ngIf="modalidadesPagamento" class="col-12 field">\n              <label for="modalidade" class="text-900 font-medium mb-2 font-bold">Modalidade</label>\n              <p-dropdown id="modalidade" [options]="modalidadesPagamento" formControlName="modalidade"\n                placeholder="Modalidade de assinatura" optionValue="modalidade" optionLabel="label">\n              </p-dropdown>\n            </div>\n            <p-divider class="w-full px-2 mb-3"></p-divider>\n\n            <div *ngIf="assinanteId" class="col-12 field">\n              <label for="forma_pagamento" class="text-900 font-medium mb-2 font-bold">Forma de pagamento</label>\n              <p-dropdown id="forma_pagamento" [options]="formasPagamento" formControlName="forma_pagamento"\n                placeholder="Forma de pagamento" (onChange)="enableCartaoCliente($event); loadCartao()">\n              </p-dropdown>\n            </div>\n            <p-divider class="w-full px-2 mb-3"></p-divider>\n\n            <ng-container *ngIf="enableCartaoView">\n              <div *ngIf="cartoes" class="col-12 field">\n                <label for="cartoes" class="text-900 font-medium mb-3">Cart\xe3o final</label>\n                <p-dropdown id="cartoes" #drop_client [options]="cartoes.data" formControlName="cartao_cliente_id"\n                  [filter]="true" placeholder="Selecione um cart\xe3o" optionValue="id" optionLabel="ultimos_digitos"\n                  [virtualScroll]="true" [virtualScrollItemSize]="38" [lazy]="true"\n                  (onLazyLoad)="paginarCartao($event)" (onFilter)="onCartaoFilter($event)"\n                  (onFocus)="blurCartao($event, drop_client)">\n                  <ng-template pTemplate="loader" let-options="options">\n                    <div class="flex align-items-center py-2 px-3" style="height: 38px">\n                      <p-skeleton [width]="options.even ? \'60%\' : \'50%\'" height="1rem"></p-skeleton>\n                    </div>\n                  </ng-template>\n                  <ng-template let-c pTemplate="item">\n                    <div>{{"Final: " + c.ultimos_digitos }}</div>\n                  </ng-template>\n                </p-dropdown>\n              </div>\n              <div *ngIf="!cartoes" class="col-12 field">\n                <div class="mt-3 lg:mt-0">\n                  <span class="text-600 mr-2">Cliente sem cart\xf5es cadastrados!</span>\n                  <a tabindex="0" (click)="cadastrarCartao()"\n                    class="cursor-pointer text-900 hover:text-primary transition-duration-150">Clique\n                    aqui para cadastrar um novo</a>\n                </div>\n              </div>\n              <p-divider class="w-full px-2 mb-3"></p-divider>\n            </ng-container>\n\n          </div>\n          <div class="flex justify-content-end">\n            <button pButton pRipple label="Criar" icon="pi pi-send" iconPos="right" class="w-auto" (click)="create()"\n              [disabled]="disableCreateBtn()"></button>\n          </div>\n        </div>\n\n      </div>\n\n    </form>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-button expand="full" color="danger" (click)="fechar()">Fechar</ion-button>\n  </ion-toolbar>\n</ion-footer>',styles:[""]})],l);var J=e(15861);var Z=e(42732),R=e(98739);let c=class{constructor(a,t,n){this.planoService=a,this.modal=t,this.toastService=n,this.searchedPlano="",this.currentPage=1,this.subscriptions=new A.w0}ngOnInit(){this.loadPlanos()}ngOnDestroy(){this.subscriptions.unsubscribe()}loadPlanos(a=1,t){const n=this.planoService.list({searchedPlano:t},{order:v.L.DESC,page:a,take:6}).subscribe(s=>{this.planos=s});this.subscriptions.add(n)}paginar(a){const{first:t,rows:n}=a,s=Number(Number(t)/Number(n)+1);s!=this.currentPage&&(this.currentPage=s,this.loadPlanos(s,this.searchedPlano))}doSearch(){this.loadPlanos(1,this.searchedPlano)}clearSearch(){this.searchedPlano="",this.loadPlanos()}assinar(a){this.showModal(l,{plano:a})}showModal(a,t){var n=this;return(0,J.Z)(function*(){const s=yield n.modal.create({component:a,backdropDismiss:!1,cssClass:"modal-size-100",componentProps:t});return s.onDidDismiss().then(m=>{const{data:u,role:$}=m;u&&n.toastService.presentToast({detalhe:"Opera\xe7\xe3o bem sucedida!",titulo:"Sucesso!",duracao:R.m4.mediumDuration,gravidade:R.kl.SUCESSO})}),yield s.present()})()}};c.ctorParameters=()=>[{type:Z.w},{type:f.IN},{type:V.D}],c=(0,r.gn)([(0,i.wA2)({selector:"app-assinaturas-main",template:'<div class="wall-background px-4 py-8 md:px-6 lg:px-8">\n    <div class="text-900 font-bold text-6xl mb-4 text-center">Planos</div>\n\n    <div class="flex w-full align-items-center justify-content-center px-1 mb-2\n    border-1 surface-border border-round-lg">\n        <span class="p-input-icon-left w-full ">\n            <i class="pi pi-search text-500 cursor-pointer" (click)="doSearch()"></i>\n            <input type="text" pInputText placeholder="Procurar" class="w-full border-none shadow-none outline-none"\n            [(ngModel)]="searchedPlano" [ngModelOptions]="{standalone: true}" (keyup.enter)="doSearch()" />\n        </span>\n        <span class="border-1 p-1 surface-border border-round surface-100 mr-2\n         text-600 text-xs hidden md:block cursor-pointer" (click)="clearSearch()">Limpar</span>\n    </div>\n\n    <div class="grid">\n        <ng-container *ngIf="planos">\n            <div *ngFor="let p of planos.data" class="col-12 lg:col-4">\n                <div class="p-3 h-full">\n                    <div class="shadow-2 p-3 flex flex-column surface-card" style="border-radius: 6px">\n                        <div class="text-900 font-medium text-xl mb-2">{{ p.nome }}</div>\n                        <div class="text-600">{{ p.descricao }}</div>\n                        <hr class="my-3 mx-0 border-top-1 border-none surface-border" />\n                        <div class="flex align-items-center">\n                            <span class="font-bold text-2xl text-900">R$ {{ p.valor_mensal }}</span>\n                            <span class="ml-2 font-medium text-600">Mensal</span>\n                        </div>\n                        <div *ngIf="p.valor_trimestral" class="flex align-items-center mt-2">\n                            <span class="font-bold text-2xl text-900">R$ {{ p.valor_trimestral }}</span>\n                            <span class="ml-2 font-medium text-600">Trimestral</span>\n                        </div>\n                        <div *ngIf="p.valor_semestral" class="flex align-items-center mt-2">\n                            <span class="font-bold text-2xl text-900">R$ {{ p.valor_semestral }}</span>\n                            <span class="ml-2 font-medium text-600">Semestral</span>\n                        </div>\n                        <div *ngIf="p.valor_anual" class="flex align-items-center mt-2">\n                            <span class="font-bold text-2xl text-900">R$ {{ p.valor_anual }}</span>\n                            <span class="ml-2 font-medium text-600">Anual</span>\n                        </div>\n                        <hr class="my-3 mx-0 border-top-1 border-none surface-border" />\n                        <ul class="list-none p-0 m-0 flex-grow-1">\n                            <li *ngFor="let i of p.itens" class="flex align-items-center mb-3">\n                                <i class="pi pi-check-circle text-primary mr-2"></i>\n                                <span class="text-900">{{ i.item.nome }} - \n                                    <span *ngIf="i.item.quantidade" class="text-xs">{{ i.item.quantidade }} unidade(s)</span>\n                                    <span *ngIf="!i.item.quantidade" class="text-xs">ilimitado</span>\n                                </span>\n                            </li>\n                        </ul>\n                        <hr class="mb-3 mx-0 border-top-1 border-none surface-border" />\n                        <button pButton pRipple label="Assinar agora!" class="p-3 w-full p-button-outlined"\n                        (click)="assinar(p)"></button>\n                    </div>\n                </div>\n            </div>\n\n            <div class="col-12">\n                <p-paginator [paginator]="true" [rows]="planos.meta.take" [totalRecords]="planos.meta.itemCount"\n                    [pageLinks]="planos.meta.pageCount" (onPageChange)="paginar($event)"></p-paginator>\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf="!planos">\n            <div class="border-circle border-1 border-primary">\n                <app-attention-surface title="Aten\xe7\xe3o" subtitle="Vazio"\n                    message="Nenhum plano encontrado"></app-attention-surface>\n            </div>\n        </ng-container>\n    </div>\n</div>',styles:[""]})],c);var M=e(20533),k=e(58949),H=e(91670);let x=class{};x=(0,r.gn)([(0,i.LVF)({declarations:[M.Y,c,l],imports:[S.ez,o.u5,o.UX,f.Pc,w.hJ,O.T,E.j,N.Iu,D.cc,z.U,k.d,I.o,H.A],exports:[M.Y,c,l]})],x);let C=class{};C=(0,r.gn)([(0,i.LVF)({imports:[S.ez,o.u5,f.Pc,g,I.o,x],declarations:[d]})],C)}}]);