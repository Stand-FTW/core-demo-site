"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6364],{96364:(F,E,m)=>{m.r(E),m.d(E,{FilesystemWeb:()=>_});var c=m(15861),R=m(47423),D=m(61443);function v(p){const n=p.split("/").filter(r=>"."!==r),t=[];return n.forEach(r=>{".."===r&&t.length>0&&".."!==t[t.length-1]?t.pop():t.push(r)}),t.join("/")}class _ extends R.Uw{constructor(){super(...arguments),this.DB_VERSION=1,this.DB_NAME="Disc",this._writeCmds=["add","put","delete"]}initDb(){var n=this;return(0,c.Z)(function*(){if(void 0!==n._db)return n._db;if(!("indexedDB"in window))throw n.unavailable("This browser doesn't support IndexedDB");return new Promise((t,r)=>{const e=indexedDB.open(n.DB_NAME,n.DB_VERSION);e.onupgradeneeded=_.doUpgrade,e.onsuccess=()=>{n._db=e.result,t(e.result)},e.onerror=()=>r(e.error),e.onblocked=()=>{console.warn("db blocked")}})})()}static doUpgrade(n){const r=n.target.result;n.oldVersion,r.objectStoreNames.contains("FileStorage")&&r.deleteObjectStore("FileStorage"),r.createObjectStore("FileStorage",{keyPath:"path"}).createIndex("by_folder","folder")}dbRequest(n,t){var r=this;return(0,c.Z)(function*(){const e=-1!==r._writeCmds.indexOf(n)?"readwrite":"readonly";return r.initDb().then(i=>new Promise((s,d)=>{const u=i.transaction(["FileStorage"],e).objectStore("FileStorage")[n](...t);u.onsuccess=()=>s(u.result),u.onerror=()=>d(u.error)}))})()}dbIndexRequest(n,t,r){var e=this;return(0,c.Z)(function*(){const i=-1!==e._writeCmds.indexOf(t)?"readwrite":"readonly";return e.initDb().then(s=>new Promise((d,a)=>{const h=s.transaction(["FileStorage"],i).objectStore("FileStorage").index(n)[t](...r);h.onsuccess=()=>d(h.result),h.onerror=()=>a(h.error)}))})()}getPath(n,t){const r=void 0!==t?t.replace(/^[/]+|[/]+$/g,""):"";let e="";return void 0!==n&&(e+="/"+n),""!==t&&(e+="/"+r),e}clear(){var n=this;return(0,c.Z)(function*(){(yield n.initDb()).transaction(["FileStorage"],"readwrite").objectStore("FileStorage").clear()})()}readFile(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path),e=yield t.dbRequest("get",[r]);if(void 0===e)throw Error("File does not exist.");return{data:e.content?e.content:""}})()}writeFile(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path);let e=n.data;const i=n.encoding,s=n.recursive,d=yield t.dbRequest("get",[r]);if(d&&"directory"===d.type)throw Error("The supplied path is a directory.");const a=r.substr(0,r.lastIndexOf("/"));if(void 0===(yield t.dbRequest("get",[a]))){const h=a.indexOf("/",1);if(-1!==h){const g=a.substr(h);yield t.mkdir({path:g,directory:n.directory,recursive:s})}}if(!i&&(e=e.indexOf(",")>=0?e.split(",")[1]:e,!t.isBase64String(e)))throw Error("The supplied data is not valid base64 content.");const u=Date.now(),l={path:r,folder:a,type:"file",size:e.length,ctime:u,mtime:u,content:e};return yield t.dbRequest("put",[l]),{uri:l.path}})()}appendFile(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path);let e=n.data;const i=n.encoding,s=r.substr(0,r.lastIndexOf("/")),d=Date.now();let a=d;const o=yield t.dbRequest("get",[r]);if(o&&"directory"===o.type)throw Error("The supplied path is a directory.");if(void 0===(yield t.dbRequest("get",[s]))){const h=s.indexOf("/",1);if(-1!==h){const g=s.substr(h);yield t.mkdir({path:g,directory:n.directory,recursive:!0})}}if(!i&&!t.isBase64String(e))throw Error("The supplied data is not valid base64 content.");void 0!==o&&(e=void 0===o.content||i?o.content+e:btoa(atob(o.content)+atob(e)),a=o.ctime);const l={path:r,folder:s,type:"file",size:e.length,ctime:a,mtime:d,content:e};yield t.dbRequest("put",[l])})()}deleteFile(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path);if(void 0===(yield t.dbRequest("get",[r])))throw Error("File does not exist.");if(0!==(yield t.dbIndexRequest("by_folder","getAllKeys",[IDBKeyRange.only(r)])).length)throw Error("Folder is not empty.");yield t.dbRequest("delete",[r])})()}mkdir(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path),e=n.recursive,i=r.substr(0,r.lastIndexOf("/")),s=(r.match(/\//g)||[]).length,d=yield t.dbRequest("get",[i]),a=yield t.dbRequest("get",[r]);if(1===s)throw Error("Cannot create Root directory");if(void 0!==a)throw Error("Current directory does already exist.");if(!e&&2!==s&&void 0===d)throw Error("Parent directory must exist");if(e&&2!==s&&void 0===d){const l=i.substr(i.indexOf("/",1));yield t.mkdir({path:l,directory:n.directory,recursive:e})}const o=Date.now(),u={path:r,folder:i,type:"directory",size:0,ctime:o,mtime:o};yield t.dbRequest("put",[u])})()}rmdir(n){var t=this;return(0,c.Z)(function*(){const{path:r,directory:e,recursive:i}=n,s=t.getPath(e,r),d=yield t.dbRequest("get",[s]);if(void 0===d)throw Error("Folder does not exist.");if("directory"!==d.type)throw Error("Requested path is not a directory");const a=yield t.readdir({path:r,directory:e});if(0!==a.files.length&&!i)throw Error("Folder is not empty");for(const o of a.files){const u=`${r}/${o.name}`;"file"===(yield t.stat({path:u,directory:e})).type?yield t.deleteFile({path:u,directory:e}):yield t.rmdir({path:u,directory:e,recursive:i})}yield t.dbRequest("delete",[s])})()}readdir(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path),e=yield t.dbRequest("get",[r]);if(""!==n.path&&void 0===e)throw Error("Folder does not exist.");const i=yield t.dbIndexRequest("by_folder","getAllKeys",[IDBKeyRange.only(r)]);return{files:yield Promise.all(i.map(function(){var d=(0,c.Z)(function*(a){let o=yield t.dbRequest("get",[a]);return void 0===o&&(o=yield t.dbRequest("get",[a+"/"])),{name:a.substring(r.length+1),type:o.type,size:o.size,ctime:o.ctime,mtime:o.mtime,uri:o.path}});return function(a){return d.apply(this,arguments)}}()))}})()}getUri(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path);let e=yield t.dbRequest("get",[r]);return void 0===e&&(e=yield t.dbRequest("get",[r+"/"])),{uri:e?.path||r}})()}stat(n){var t=this;return(0,c.Z)(function*(){const r=t.getPath(n.directory,n.path);let e=yield t.dbRequest("get",[r]);if(void 0===e&&(e=yield t.dbRequest("get",[r+"/"])),void 0===e)throw Error("Entry does not exist.");return{type:e.type,size:e.size,ctime:e.ctime,mtime:e.mtime,uri:e.path}})()}rename(n){var t=this;return(0,c.Z)(function*(){yield t._copy(n,!0)})()}copy(n){var t=this;return(0,c.Z)(function*(){return t._copy(n,!1)})()}requestPermissions(){return(0,c.Z)(function*(){return{publicStorage:"granted"}})()}checkPermissions(){return(0,c.Z)(function*(){return{publicStorage:"granted"}})()}_copy(n,t=!1){var r=this;return(0,c.Z)(function*(){let{toDirectory:e}=n;const{to:i,from:s,directory:d}=n;if(!i||!s)throw Error("Both to and from must be provided");e||(e=d);const a=r.getPath(d,s),o=r.getPath(e,i);if(a===o)return{uri:o};if(function q(p,n){p=v(p),n=v(n);const t=p.split("/"),r=n.split("/");return p!==n&&t.every((e,i)=>e===r[i])}(a,o))throw Error("To path cannot contain the from path");let u;try{u=yield r.stat({path:i,directory:e})}catch{const y=i.split("/");y.pop();const b=y.join("/");if(y.length>0&&"directory"!==(yield r.stat({path:b,directory:e})).type)throw new Error("Parent directory of the to path is a file")}if(u&&"directory"===u.type)throw new Error("Cannot overwrite a directory with a file");const l=yield r.stat({path:s,directory:d}),h=function(){var f=(0,c.Z)(function*(y,b,w){const x=r.getPath(e,y),P=yield r.dbRequest("get",[x]);P.ctime=b,P.mtime=w,yield r.dbRequest("put",[P])});return function(b,w,x){return f.apply(this,arguments)}}(),g=l.ctime?l.ctime:Date.now();switch(l.type){case"file":{const f=yield r.readFile({path:s,directory:d});let y;t&&(yield r.deleteFile({path:s,directory:d})),r.isBase64String(f.data)||(y=D.ez.UTF8);const b=yield r.writeFile({path:i,directory:e,data:f.data,encoding:y});return t&&(yield h(i,g,l.mtime)),b}case"directory":{if(u)throw Error("Cannot move a directory over an existing object");try{yield r.mkdir({path:i,directory:e,recursive:!1}),t&&(yield h(i,g,l.mtime))}catch{}const f=(yield r.readdir({path:s,directory:d})).files;for(const y of f)yield r._copy({from:`${s}/${y.name}`,to:`${i}/${y.name}`,directory:d,toDirectory:e},t);t&&(yield r.rmdir({path:s,directory:d}))}}return{uri:o}})()}isBase64String(n){try{return btoa(atob(n))==n}catch{return!1}}}_._debug=!0}}]);